/*
 * ECGridOSAPIv4_1_SOAP_Service Class
 * Copyright: Loren Data Corp.
 * Last Updated: 09/08/2022
 * Author: Greg Kolinski
 * Description: This class is indended to provide you the same functionality in .NET CORE as you get with regular .Net Framework Projects using Web References.
 * Included are both Synchronous and Asyncronous(AMP) Methods versions.  All call as are SOAP Calls with the HTTP GET/POST Versions removed.
 * 
 * This code was created in part by using the microsoft svcutil tool from the current WSDL at https://os.ecgrid.io/v4.1/prod/ECGridOS.asmx?WSDL.
 * https://learn.microsoft.com/en-us/dotnet/framework/wcf/feature-details/generating-a-wcf-client-from-service-metadata
 * 
 *Command Line Tool Calls
 * Async Only = svcutil https://os.ecgrid.io/v4.1/prod/ECGridOS.asmx?WSDL /Language=c# /t:Code /out:c:\temp\ECGridOSAPIv4_1_Soap_Service.cs /sc /a /tcv:Version35
 * Sync Only = svcutil https://os.ecgrid.io/v4.1/prod/ECGridOS.asmx?WSDL /Language=c# /t:Code /out:c:\temp\ECGridOSAPIv4_1_Soap_Service.cs /sc
 * 
 * To get a combined version like this one, you will need to combine the two interface sections. The object classes structures, etc. are the same in both versions.
 * 
 * Uses Packages System.ServiceModel.Primitives
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/// <summary>
/// ECGridOS API Soap Service Interface Class
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Name = "ECGridOS API v4Soap", Namespace = "https://os.ecgrid.io/", ConfigurationName = "ECGridOSAPIv4Soap")]
public interface IECGridOSAPIv4Soap
{
    #region Asynchronous Method Service Contracts

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackPendingListExA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackPendingListExA(string SessionID, int NetworkID, int MailboxID, string NetworkExclude, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo[] EndCallBackPendingListExA(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackFailedList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackFailedList(string SessionID, short MaxDays, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo[] EndCallBackFailedList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackFailedListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackFailedListEx(string SessionID, int NetworkID, int MailboxID, short MaxDays, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo[] EndCallBackFailedListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportMonthly")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportMonthly(string SessionID, short Report, System.DateTime Month, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportMonthly(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportMonthlyEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportMonthlyEx(string SessionID, int NetworkID, int MailboxID, short Report, System.DateTime Month, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportMonthlyEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportTrafficStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportTrafficStats(string SessionID, System.DateTime TargetTime, short NumPeriods, StatisticsPeriod Period, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportTrafficStats(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportTrafficStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportTrafficStatsEx(string SessionID, int NetworkID, int MailboxID, System.DateTime TargetTime, short NumPeriods, StatisticsPeriod Period, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportTrafficStatsEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportTrafficStatsPublic")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportTrafficStatsPublic(System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportTrafficStatsPublic(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportInstantStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportInstantStats(string SessionID, short Minutes1, short Minutes2, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportInstantStats(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportInstantStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportInstantStatsEx(string SessionID, int NetworkID, int MailboxID, int ECGridID, short Minutes1, short Minutes2, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportInstantStatsEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportMailboxStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportMailboxStats(string SessionID, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportMailboxStats(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportMailboxStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportMailboxStatsEx(string SessionID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportMailboxStatsEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportMailboxInterchangeStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportMailboxInterchangeStats(string SessionID, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportMailboxInterchangeStats(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportMailboxInterchangeStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportMailboxInterchangeStatsEx(string SessionID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportMailboxInterchangeStatsEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportInterchangeStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportInterchangeStats(string SessionID, System.DateTime StartTime, System.DateTime EndTime, Direction Direction, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportInterchangeStats(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ReportInterchangeStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginReportInterchangeStatsEx(string SessionID, System.DateTime StartTime, System.DateTime EndTime, Direction Direction, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndReportInterchangeStatsEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommAdd(
                string SessionID,
                int NetworkID,
                int MailboxID,
                NetworkGatewayCommChannel CommType,
                int OwnerUserID,
                bool ECGridHosted,
                string Identifier,
                string URL,
                string Version,
                bool SignData,
                bool EncryptData,
                bool CompressData,
                ReceiptType ReceiptType,
                HTTPAuthType HTTPAuthentication,
                string HTTPUser,
                string HTTPPassword,
                UseType UseType,
                System.DateTime BeginUsage,
                System.DateTime EndUsage,
                Status Status,
                System.AsyncCallback callback,
                object asyncState);

    CommIDInfo EndCommAdd(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommSetPair")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommSetPair(string SessionID, int ECGridIDFrom, int ECGridIDTo, string Identifier1, string Identifier2, System.AsyncCallback callback, object asyncState);

    CommIDInfo[] EndCommSetPair(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommPair")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommPair(string SessionID, NetworkGatewayCommChannel CommType, int ECGridIDFrom, int ECGridIDTo, string DefaultID, bool TestMode, System.AsyncCallback callback, object asyncState);

    CommIDInfo[] EndCommPair(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommUpdate(
                string SessionID,
                int CommID,
                int OwnerUserID,
                string Identifier,
                string URL,
                string Version,
                bool SignData,
                bool EncryptData,
                bool CompressData,
                ReceiptType ReceiptType,
                HTTPAuthType HTTPAuthentication,
                string HTTPUser,
                string HTTPPassword,
                UseType UseType,
                System.DateTime BeginUsage,
                System.DateTime EndUsage,
                System.AsyncCallback callback,
                object asyncState);

    CommIDInfo EndCommUpdate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommList(string SessionID, NetworkGatewayCommChannel CommType, bool PrivateKeyRequired, UseType UseType, bool ShowInactive, bool WithCerts, System.AsyncCallback callback, object asyncState);

    CommIDInfo[] EndCommList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommListEx(string SessionID, int NetworkID, int MailboxID, NetworkGatewayCommChannel CommType, bool PrivateKeyRequired, UseType UseType, bool ShowInactive, bool WithCerts, System.AsyncCallback callback, object asyncState);

    CommIDInfo[] EndCommListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommFind")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommFind(string SessionID, string Identifier, NetworkGatewayCommChannel CommType, bool PrivateKeyRequired, UseType UseType, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    CommIDInfo[] EndCommFind(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommInfo(string SessionID, int CommID, System.AsyncCallback callback, object asyncState);

    CommIDInfo EndCommInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommSetStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommSetStatus(string SessionID, int CommID, Status Status, System.AsyncCallback callback, object asyncState);

    bool EndCommSetStatus(System.IAsyncResult result);

    // CODEGEN: Parameter 'Cert' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertificateAddPublic")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertificateAddPublic(CertificateAddPublicRequest request, System.AsyncCallback callback, object asyncState);

    CertificateAddPublicResponse EndCertificateAddPublic(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertificateAddPublicA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertificateAddPublicA(string SessionID, int CommID, CertificateType CertType, string KeyId, string UserId, System.DateTime BeginUsage, CertificateUsage Usage, string PartnerCommID, string PartnerURL, string CertBase64, System.AsyncCallback callback, object asyncState);

    CommIDInfo EndCertificateAddPublicA(System.IAsyncResult result);

    // CODEGEN: Parameter 'Cert' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertAddPrivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertAddPrivate(CertAddPrivateRequest request, System.AsyncCallback callback, object asyncState);

    CertAddPrivateResponse EndCertAddPrivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertAddPrivateA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertAddPrivateA(string SessionID, int CommID, CertificateType CertType, string KeyId, string UserId, System.DateTime BeginUsage, CertificateUsage Usage, string PartnerAS2ID, string CertBase64, string Password, System.AsyncCallback callback, object asyncState);

    as2CommInfo EndCertAddPrivateA(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertificateCreatePrivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertificateCreatePrivate(string SessionID, int CommID, System.DateTime BeginUsage, CertificateUsage Usage, CertificateSecureHashAlgorithm SecureHashAlgorithm, string PartnerAS2ID, System.DateTime Expires, System.AsyncCallback callback, object asyncState);

    CommIDInfo EndCertificateCreatePrivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertificateRenewPrivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertificateRenewPrivate(string SessionID, int CommID, int CertKeyID, short OverlapDays, short Years, CertificateSecureHashAlgorithm SecureHashAlgorithm, System.AsyncCallback callback, object asyncState);

    CommIDInfo EndCertificateRenewPrivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CertificateTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCertificateTerminate(string SessionID, int CommID, int CertKeyID, System.AsyncCallback callback, object asyncState);

    bool EndCertificateTerminate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CommDefaultMailbox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCommDefaultMailbox(string SessionID, int CommID, int MailboxID, System.AsyncCallback callback, object asyncState);

    bool EndCommDefaultMailbox(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NowUTC")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNowUTC(System.AsyncCallback callback, object asyncState);

    System.DateTime EndNowUTC(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeDate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeDate(string InterchangeHeader, System.AsyncCallback callback, object asyncState);

    System.DateTime EndInterchangeDate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/Version")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginVersion(System.AsyncCallback callback, object asyncState);

    string EndVersion(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/X400Format")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginX400Format(
                string Country,
                string ADMD,
                string PRMD,
                string Organization,
                string OrganizationalUnit1,
                string OrganizationalUnit2,
                string OrganizationalUnit3,
                string OrganizationalUnit4,
                string Surname,
                string GivenName,
                string Initials,
                string Generation,
                string CommonName,
                string DDA,
                string X_121,
                string N_ID,
                string T_TY,
                string T_ID,
                System.AsyncCallback callback,
                object asyncState);

    string EndX400Format(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUploadExA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUploadExA(string SessionID, int NetworkID, int MailboxID, string FileName, string ContentBase64, System.AsyncCallback callback, object asyncState);

    long EndParcelUploadExA(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUpdateStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUpdateStatus(string SessionID, long ParcelID, ParcelStatus Status, bool TransLogOnly, System.AsyncCallback callback, object asyncState);

    bool EndParcelUpdateStatus(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUpdateLocalStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUpdateLocalStatus(string SessionID, long ParcelID, short Status, System.AsyncCallback callback, object asyncState);

    bool EndParcelUpdateLocalStatus(System.IAsyncResult result);

    // CODEGEN: Parameter 'Content' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUploadMft")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUploadMft(ParcelUploadMftRequest request, System.AsyncCallback callback, object asyncState);

    ParcelUploadMftResponse EndParcelUploadMft(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUploadMftA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUploadMftA(string SessionID, string FileName, string ContentBase64, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    long EndParcelUploadMftA(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelTest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelTest(string SessionID, int ECGridIDFrom, int ECGridIDTo, EDIStandard DocumentType, System.AsyncCallback callback, object asyncState);

    long EndParcelTest(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelSetMailbagControlID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelSetMailbagControlID(string SessionID, long ParcelID, string MailbagControlID, System.AsyncCallback callback, object asyncState);

    bool EndParcelSetMailbagControlID(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelFindMailbagControlID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelFindMailbagControlID(string SessionID, int NetworkID, int MailboxID, string MailbagControlID, System.AsyncCallback callback, object asyncState);

    ParcelIDInfo[] EndParcelFindMailbagControlID(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelFindMailbagControlIDTo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelFindMailbagControlIDTo(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, string MailbagControlID, System.AsyncCallback callback, object asyncState);

    ParcelIDInfo[] EndParcelFindMailbagControlIDTo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelManifest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelManifest(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    ManifestInfo[] EndParcelManifest(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeManifest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeManifest(string SessionID, long InterchangeID, System.AsyncCallback callback, object asyncState);

    ManifestInfo[] EndInterchangeManifest(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelNoteList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelNoteList(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    ParcelNote[] EndParcelNoteList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBoxArchive(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBoxArchiveEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBoxArchiveExShort")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBoxArchiveExShort(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBoxArchiveExShort(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBoxArchiveDescEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBoxArchiveDescEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBoxArchiveDescEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxArchive(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxArchiveEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxArchiveExShort")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxArchiveExShort(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxArchiveExShort(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxArchiveDescEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxArchiveDescEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxArchiveDescEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxError")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxError(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxError(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxErrorEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxErrorEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxErrorEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxInProcess")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxInProcess(string SessionID, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxInProcess(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelOutBoxInProcessEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelOutBoxInProcessEx(string SessionID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelOutBoxInProcessEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInfo(string SessionID, long InterchangeID, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo EndInterchangeInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBox(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeInBox(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfoCollection EndInterchangeInBoxArchive(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeInBoxEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfoCollection EndInterchangeInBoxArchiveEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBox(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBox(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfoCollection EndInterchangeOutBoxArchive(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfoCollection EndInterchangeOutBoxArchiveEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxPending")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxPending(string SessionID, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxPending(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxPendingEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxPendingEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxPendingEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxPending")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxPending(string SessionID, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeInBoxPending(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxPendingEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxPendingEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeInBoxPendingEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxBlocked")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxBlocked(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeInBoxBlocked(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeInBoxBlockedEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeInBoxBlockedEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeInBoxBlockedEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxBlocked")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxBlocked(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxBlocked(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxBlockedEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxBlockedEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxBlockedEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeHeaderInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeHeaderInfo(string SessionID, string InterchangeHeader, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo EndInterchangeHeaderInfo(System.IAsyncResult result);

    // CODEGEN: Parameter 'InterchangeHeader' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeHeaderInfoB")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeHeaderInfoB(InterchangeHeaderInfoBRequest request, System.AsyncCallback callback, object asyncState);

    InterchangeHeaderInfoBResponse EndInterchangeHeaderInfoB(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxNoRoute")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxNoRoute(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxNoRoute(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeOutBoxNoRouteEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeOutBoxNoRouteEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    InterchangeIDInfo[] EndInterchangeOutBoxNoRouteEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeResend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeResend(string SessionID, long InterchangeID, System.AsyncCallback callback, object asyncState);

    InterchangeIDStatus EndInterchangeResend(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterchangeCancel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterchangeCancel(string SessionID, long InterchangeID, System.AsyncCallback callback, object asyncState);

    bool EndInterchangeCancel(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackEventInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackEventInfo(string SessionID, int CallBackEventID, short QueueCount, System.AsyncCallback callback, object asyncState);

    CallBackEventIDInfo EndCallBackEventInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackEventListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackEventListEx(string SessionID, int NetworkID, int MailboxID, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    CallBackEventIDInfo[] EndCallBackEventListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackAddEx(
                string SessionID,
                int NetworkID,
                int MailboxID,
                int UserID,
                Objects SystemObject,
                short ObjectStatus,
                Direction Direction,
                short Frequency,
                short MaxRetries,
                string URL,
                HTTPAuthType HTTPAuthentication,
                string HTTPUser,
                string HTTPPassword,
                Status Status,
                System.AsyncCallback callback,
                object asyncState);

    CallBackEventIDInfo EndCallBackAddEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackEventSetStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackEventSetStatus(string SessionID, int CallBackEventID, Status Status, System.AsyncCallback callback, object asyncState);

    bool EndCallBackEventSetStatus(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackQueueInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackQueueInfo(string SessionID, long CallBackQueueID, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo EndCallBackQueueInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackTest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackTest(string SessionID, int CallBackEventID, long ParcelID, long InterchangeID, int UserID, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo EndCallBackTest(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackPendingList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackPendingList(string SessionID, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo[] EndCallBackPendingList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CallBackPendingListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCallBackPendingListEx(string SessionID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    CallBackQueueIDInfo[] EndCallBackPendingListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxDescription")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxDescription(string SessionID, int MailboxID, string Description, System.AsyncCallback callback, object asyncState);

    bool EndMailboxDescription(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxUse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxUse(string SessionID, int MailboxID, UseType UseType, System.AsyncCallback callback, object asyncState);

    bool EndMailboxUse(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxList(string SessionID, string Name, System.AsyncCallback callback, object asyncState);

    MailboxIDInfo[] EndMailboxList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxListEx(string SessionID, int NetworkID, string Name, System.AsyncCallback callback, object asyncState);

    MailboxIDInfo[] EndMailboxListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPAdd(string SessionID, string Qualifier, string ID, string Description, System.AsyncCallback callback, object asyncState);

    int EndTPAdd(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPAddVAN")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPAddVAN(string SessionID, int NetworkID, string Qualifier, string ID, string Description, System.AsyncCallback callback, object asyncState);

    int EndTPAddVAN(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPAddEx(string SessionID, int NetworkID, int MailboxID, string Qualifier, string ID, string Description, RoutingGroup RoutingGroup, System.AsyncCallback callback, object asyncState);

    int EndTPAddEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPMove")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPMove(string SessionID, int ECGridID, System.DateTime MoveDateTime, System.AsyncCallback callback, object asyncState);

    int EndTPMove(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPMoveMailbox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPMoveMailbox(string SessionID, int ECGridID, int MailboxID, System.AsyncCallback callback, object asyncState);

    int EndTPMoveMailbox(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPMoveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPMoveEx(string SessionID, int NetworkID, int MailboxID, int ECGridID, System.DateTime MoveDateTime, System.AsyncCallback callback, object asyncState);

    int EndTPMoveEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPUpdateDescription")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPUpdateDescription(string SessionID, int ECGridID, string Description, System.AsyncCallback callback, object asyncState);

    bool EndTPUpdateDescription(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPUpdateDataEMail")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPUpdateDataEMail(string SessionID, int ECGridID, EMailSystem EMailSystem, string DataEMail, EMailPayload PayloadPosition, System.AsyncCallback callback, object asyncState);

    bool EndTPUpdateDataEMail(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPActivate(string SessionID, int ECGridID, System.AsyncCallback callback, object asyncState);

    bool EndTPActivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPSuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPSuspend(string SessionID, int ECGridID, System.AsyncCallback callback, object asyncState);

    bool EndTPSuspend(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPTerminate(string SessionID, int ECGridID, System.AsyncCallback callback, object asyncState);

    bool EndTPTerminate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPSetRoutingGroup")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPSetRoutingGroup(string SessionID, int ECGridID, RoutingGroup RoutingGroup, System.AsyncCallback callback, object asyncState);

    bool EndTPSetRoutingGroup(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPInfo(string SessionID, int ECGridID, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo EndTPInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPSearch")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPSearch(string SessionID, string Qualifier, string ID, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo[] EndTPSearch(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPSearchEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPSearchEx(string SessionID, int NetworkID, int MailboxID, string Qualifier, string ID, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo[] EndTPSearchEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPList(string SessionID, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo[] EndTPList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPListEx(string SessionID, int NetworkID, int MailboxID, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo[] EndTPListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPListExPaged")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPListExPaged(string SessionID, int NetworkID, int MailboxID, bool ShowInactive, short PageSize, short PageNumber, System.AsyncCallback callback, object asyncState);

    ECGridIDInfoCollection EndTPListExPaged(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPListByOwner")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPListByOwner(string SessionID, int OwnerUserID, OrderBy OrderBy, bool ShowInactive, short PageSize, short PageNumber, System.AsyncCallback callback, object asyncState);

    ECGridIDInfoCollection EndTPListByOwner(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPFindEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPFindEx(string SessionID, int NetworkID, int MailboxID, string Description, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo[] EndTPFindEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPGetMailboxDefault")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPGetMailboxDefault(string SessionID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    ECGridIDInfo EndTPGetMailboxDefault(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPSetMailboxDefault")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPSetMailboxDefault(string SessionID, int ECGridID, System.AsyncCallback callback, object asyncState);

    bool EndTPSetMailboxDefault(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/TPSetOwner")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginTPSetOwner(string SessionID, int ECGridID, int OwnerUserID, System.AsyncCallback callback, object asyncState);

    bool EndTPSetOwner(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectAdd(string SessionID, int ECGridID1, int ECGridID2, string Reference, string ContactName, string ContactEMail, bool NotifyContact, bool Preconfirm, string Note, System.AsyncCallback callback, object asyncState);

    InterconnectIDInfo EndInterconnectAdd(System.IAsyncResult result);

    // CODEGEN: Parameter 'AttachmentContent' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectNote")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectNote(InterconnectNoteRequest request, System.AsyncCallback callback, object asyncState);

    InterconnectNoteResponse EndInterconnectNote(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectCancel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectCancel(string SessionID, int InterconnectID, string Note, eMailTo EMailTo, string OtherEMailAddress, System.AsyncCallback callback, object asyncState);

    bool EndInterconnectCancel(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectInfo(string SessionID, int InterconnectID, System.AsyncCallback callback, object asyncState);

    InterconnectIDInfo EndInterconnectInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectInfoGUID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectInfoGUID(string SessionID, string UniqueID, System.AsyncCallback callback, object asyncState);

    InterconnectIDInfo EndInterconnectInfoGUID(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectNoteList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectNoteList(string SessionID, int InterconnectID, System.AsyncCallback callback, object asyncState);

    InterconnectNote[] EndInterconnectNoteList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectListByECGridID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectListByECGridID(string SessionID, int ECGridID1, int ECGridID2, System.AsyncCallback callback, object asyncState);

    InterconnectIDInfo[] EndInterconnectListByECGridID(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectListByStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectListByStatus(string SessionID, StatusInterconnect Status, int ECGridID, short MaxDays, System.AsyncCallback callback, object asyncState);

    InterconnectIDInfo[] EndInterconnectListByStatus(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectListByStatusEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectListByStatusEx(string SessionID, int NetworkID, int MailboxID, StatusInterconnect IntStatus, int ECGridID, short MaxDays, System.AsyncCallback callback, object asyncState);

    InterconnectIDInfo[] EndInterconnectListByStatusEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectCount")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectCount(string SessionID, short MaxDays, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndInterconnectCount(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/InterconnectCountEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginInterconnectCountEx(string SessionID, int NetworkID, int MailboxID, int ECGridID, short MaxDays, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndInterconnectCountEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MigrationAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMigrationAdd(string SessionID, string Name, System.DateTime Scheduled, int TargetNetworkId, int TargetMailboxId, MigrationStatus Status, System.AsyncCallback callback, object asyncState);

    int EndMigrationAdd(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MigrationAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMigrationAddEx(string SessionID, int NetworkId, int MailboxId, string Name, System.DateTime Scheduled, int TargetNetworkId, int TargetMailboxId, MigrationStatus Status, System.AsyncCallback callback, object asyncState);

    int EndMigrationAddEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MigrationList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMigrationList(string SessionID, MigrationStatus Status, bool ShowCanceled, System.AsyncCallback callback, object asyncState);

    MigrationIDInfo[] EndMigrationList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MigrationListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMigrationListEx(string SessionID, int NetworkID, int MailboxID, MigrationStatus Status, bool ShowCanceled, System.AsyncCallback callback, object asyncState);

    MigrationIDInfo[] EndMigrationListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MigrationInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMigrationInfo(string SessionID, int MigrationID, int MigrationBatchID, System.AsyncCallback callback, object asyncState);

    MigrationIDInfo EndMigrationInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MigrationAddTP")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMigrationAddTP(string SessionID, int MigrationID, int MigrationBatchID, int ECGridID, System.AsyncCallback callback, object asyncState);

    bool EndMigrationAddTP(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyAdd(string SessionID, int ECGridIDFrom, int ECGridIDTo, int ECGridIDCCFrom, int ECGridIDCCTo, string GSFrom, string GSTo, string TransactionSet, System.AsyncCallback callback, object asyncState);

    int EndCarbonCopyAdd(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyAddEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, int ECGridIDCCFrom, int ECGridIDCCTo, string GSFrom, string GSTo, string TransactionSet, System.AsyncCallback callback, object asyncState);

    int EndCarbonCopyAddEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyActivate(string SessionID, int CarbonCopyID, System.AsyncCallback callback, object asyncState);

    bool EndCarbonCopyActivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopySuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopySuspend(string SessionID, int CarbonCopyID, System.AsyncCallback callback, object asyncState);

    bool EndCarbonCopySuspend(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyTerminate(string SessionID, int CarbonCopyID, System.AsyncCallback callback, object asyncState);

    bool EndCarbonCopyTerminate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyInfo(string SessionID, int CarbonCopyID, System.AsyncCallback callback, object asyncState);

    CarbonCopyIDInfo EndCarbonCopyInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyList(string SessionID, int ECGridIDFrom, int ECGridIDTo, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    CarbonCopyIDInfo[] EndCarbonCopyList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/CarbonCopyListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginCarbonCopyListEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    CarbonCopyIDInfo[] EndCarbonCopyListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBox(string SessionID, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBox(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBoxEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBoxEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBoxEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInBoxExShort")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInBoxExShort(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, ParcelStatus Status, System.AsyncCallback callback, object asyncState);

    ParcelIDInfoCollection EndParcelInBoxExShort(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelInfo(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    ParcelIDInfo EndParcelInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownload(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    FileInfo EndParcelDownload(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadA(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    FileInfo EndParcelDownloadA(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadS3")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadS3(string SessionID, long ParcelID, string AccessKey, string SecretKey, string Bucket, string Prefix, string Region, System.AsyncCallback callback, object asyncState);

    string EndParcelDownloadS3(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadNoUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadNoUpdate(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    FileInfo EndParcelDownloadNoUpdate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadNoUpdateA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadNoUpdateA(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    FileInfo EndParcelDownloadNoUpdateA(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadConfirm")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadConfirm(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    bool EndParcelDownloadConfirm(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelAcknowledgmentNote")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelAcknowledgmentNote(string SessionID, long ParcelID, string Subject, string Note, System.AsyncCallback callback, object asyncState);

    bool EndParcelAcknowledgmentNote(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadCancel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadCancel(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    bool EndParcelDownloadCancel(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadConfirmPendingAck")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadConfirmPendingAck(string SessionID, long ParcelID, ParcelStatus Status, System.AsyncCallback callback, object asyncState);

    bool EndParcelDownloadConfirmPendingAck(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelDownloadReset")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelDownloadReset(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    bool EndParcelDownloadReset(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelResend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelResend(string SessionID, long ParcelID, System.AsyncCallback callback, object asyncState);

    bool EndParcelResend(System.IAsyncResult result);

    // CODEGEN: Parameter 'Content' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUpload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUpload(ParcelUploadRequest request, System.AsyncCallback callback, object asyncState);

    ParcelUploadResponse EndParcelUpload(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUploadA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUploadA(string SessionID, string FileName, string ContentBase64, System.AsyncCallback callback, object asyncState);

    long EndParcelUploadA(System.IAsyncResult result);

    // CODEGEN: Parameter 'Content' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ParcelUploadEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginParcelUploadEx(ParcelUploadExRequest request, System.AsyncCallback callback, object asyncState);

    ParcelUploadExResponse EndParcelUploadEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/Login")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginLogin(string LoginName, string Password, System.AsyncCallback callback, object asyncState);

    string EndLogin(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/GenerateAPIKey")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginGenerateAPIKey(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    string EndGenerateAPIKey(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/GeneratePassword")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginGeneratePassword(string SessionID, short Length, System.AsyncCallback callback, object asyncState);

    string EndGeneratePassword(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/Logout")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginLogout(string SessionID, System.AsyncCallback callback, object asyncState);

    int EndLogout(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/ChangePassword")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginChangePassword(string SessionID, string OldPassword, string NewPassword, System.AsyncCallback callback, object asyncState);

    bool EndChangePassword(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/WhoAmI")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginWhoAmI(string SessionID, System.AsyncCallback callback, object asyncState);

    SessionInfo EndWhoAmI(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserAdd(
                string SessionID,
                int MailboxID,
                string LoginName,
                string Password,
                string RecoveryQuestion,
                string RecoveryAnswer,
                string FirstName,
                string LastName,
                string Company,
                string EMail,
                string Phone,
                string CellPhone,
                CellCarrier CellCarrier,
                AuthLevel AuthLevel,
                System.AsyncCallback callback,
                object asyncState);

    int EndUserAdd(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserAddEx(
                string SessionID,
                int NetworkID,
                int MailboxID,
                string LoginName,
                string Password,
                string RecoveryQuestion,
                string RecoveryAnswer,
                string FirstName,
                string LastName,
                string Company,
                string EMail,
                string Phone,
                string CellPhone,
                CellCarrier CellCarrier,
                AuthLevel AuthLevel,
                System.AsyncCallback callback,
                object asyncState);

    int EndUserAddEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserInfo(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    UserIDInfo EndUserInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserInfobyLogin")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserInfobyLogin(string SessionID, string LoginName, System.AsyncCallback callback, object asyncState);

    UserIDInfo EndUserInfobyLogin(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserUpdate(string SessionID, int UserID, string FirstName, string LastName, string Company, string EMail, string Phone, string CellPhone, CellCarrier CellCarrier, AuthLevel AuthLevel, System.AsyncCallback callback, object asyncState);

    bool EndUserUpdate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserPassword")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserPassword(string SessionID, int UserID, string CurrentRecoveryAnswer, string Password, string RecoveryQuestion, string RecoveryAnswer, System.AsyncCallback callback, object asyncState);

    bool EndUserPassword(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserActivate(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    bool EndUserActivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserSuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserSuspend(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    bool EndUserSuspend(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserTerminate(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    bool EndUserTerminate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserSendSMS")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserSendSMS(string SessionID, int UserID, string Text, System.AsyncCallback callback, object asyncState);

    bool EndUserSendSMS(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserReset")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserReset(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    bool EndUserReset(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserList(string SessionID, string Name, System.AsyncCallback callback, object asyncState);

    UserIDInfo[] EndUserList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserListEx(string SessionID, int NetworkID, int MailboxID, string Name, System.AsyncCallback callback, object asyncState);

    UserIDInfo[] EndUserListEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserListLockedOut")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserListLockedOut(string SessionID, System.AsyncCallback callback, object asyncState);

    UserIDInfo[] EndUserListLockedOut(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserListLockedOutEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserListLockedOutEx(string SessionID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    UserIDInfo[] EndUserListLockedOutEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserSetNetworkMailbox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserSetNetworkMailbox(string SessionID, int UserID, int NetworkID, int MailboxID, System.AsyncCallback callback, object asyncState);

    bool EndUserSetNetworkMailbox(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserSetAuthLevel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserSetAuthLevel(string SessionID, int UserID, AuthLevel AuthLevel, System.AsyncCallback callback, object asyncState);

    bool EndUserSetAuthLevel(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserSetMaxSessions")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserSetMaxSessions(string SessionID, int UserID, short MaxSessions, System.AsyncCallback callback, object asyncState);

    bool EndUserSetMaxSessions(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/UserGetAPIKey")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginUserGetAPIKey(string SessionID, int UserID, System.AsyncCallback callback, object asyncState);

    string EndUserGetAPIKey(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/SessionLogCurrent")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginSessionLogCurrent(string SessionID, System.AsyncCallback callback, object asyncState);

    SessionLogInfo EndSessionLogCurrent(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/SessionLog")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginSessionLog(string SessionID, short MaxRecords, System.AsyncCallback callback, object asyncState);

    SessionLogInfo[] EndSessionLog(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/SessionLogEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginSessionLogEx(string SessionID, int UserID, System.DateTime StartTime, System.DateTime EndTime, short MaxRecords, System.AsyncCallback callback, object asyncState);

    SessionLogInfo[] EndSessionLogEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/KeyGet")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginKeyGet(string SessionID, string Key, Objects SystemObject, long ObjectID, KeyVisibility Visibility, System.AsyncCallback callback, object asyncState);

    KeyValue EndKeyGet(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/KeyList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginKeyList(string SessionID, Objects SystemObject, long ObjectID, System.AsyncCallback callback, object asyncState);

    KeyValue[] EndKeyList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/KeySet")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginKeySet(string SessionID, string Key, Objects SystemObject, long ObjectID, KeyVisibility Visibility, string Value, string Meta, int DaysToLive, System.AsyncCallback callback, object asyncState);

    bool EndKeySet(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/KeyRemove")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginKeyRemove(string SessionID, string Key, Objects SystemObject, long ObjectID, KeyVisibility Visibility, System.AsyncCallback callback, object asyncState);

    bool EndKeyRemove(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/StatusList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginStatusList(string SessionID, System.AsyncCallback callback, object asyncState);

    StatusInfo[] EndStatusList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkInfo(string SessionID, int NetworkID, System.AsyncCallback callback, object asyncState);

    NetworkIDInfo EndNetworkInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkInfoWithLog")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkInfoWithLog(string SessionID, int NetworkID, System.AsyncCallback callback, object asyncState);

    NetworkIDInfo EndNetworkInfoWithLog(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkList(string SessionID, string Name, System.AsyncCallback callback, object asyncState);

    NetworkIDInfo[] EndNetworkList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkStatusSummary")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkStatusSummary(string SessionID, bool ShowInactive, System.AsyncCallback callback, object asyncState);

    System.Data.DataSet EndNetworkStatusSummary(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkOutageList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkOutageList(string SessionID, System.AsyncCallback callback, object asyncState);

    NetworkIDInfo[] EndNetworkOutageList(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkUpdate(string SessionID, int NetworkID, string Name, string Location, System.AsyncCallback callback, object asyncState);

    bool EndNetworkUpdate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkSetContact")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkSetContact(string SessionID, int NetworkID, int UserID, NetworkContactType ContactType, System.AsyncCallback callback, object asyncState);

    bool EndNetworkSetContact(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkGetContact")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkGetContact(string SessionID, int NetworkID, NetworkContactType ContactType, System.AsyncCallback callback, object asyncState);

    UserIDInfo EndNetworkGetContact(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkSetWebsite")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkSetWebsite(string SessionID, int NetworkID, string URL, NetworkWebsiteType WebsiteType, System.AsyncCallback callback, object asyncState);

    bool EndNetworkSetWebsite(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkX12Delimiters")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkX12Delimiters(string SessionID, int NetworkID, byte SegTerm, byte ElmSep, byte SubElmSep, System.AsyncCallback callback, object asyncState);

    bool EndNetworkX12Delimiters(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/NetworkRootDeleteOnDownload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginNetworkRootDeleteOnDownload(string SessionID, int NetworkID, bool DeleteOnDownload, System.AsyncCallback callback, object asyncState);

    bool EndNetworkRootDeleteOnDownload(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxAdd(string SessionID, string Name, int UserID, System.AsyncCallback callback, object asyncState);

    int EndMailboxAdd(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxAddEx(string SessionID, int NetworkID, string Name, string UserID, System.AsyncCallback callback, object asyncState);

    int EndMailboxAddEx(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxActivate(string SessionID, int MailboxID, System.AsyncCallback callback, object asyncState);

    bool EndMailboxActivate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxSuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxSuspend(string SessionID, int MailboxID, System.AsyncCallback callback, object asyncState);

    bool EndMailboxSuspend(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxTerminate(string SessionID, int MailboxID, System.AsyncCallback callback, object asyncState);

    bool EndMailboxTerminate(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxManaged")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxManaged(string SessionID, int MailboxID, bool Managed, System.AsyncCallback callback, object asyncState);

    bool EndMailboxManaged(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxDeleteOnDownload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxDeleteOnDownload(string SessionID, int MailboxID, bool DeleteOnDownload, System.AsyncCallback callback, object asyncState);

    bool EndMailboxDeleteOnDownload(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxInfo(string SessionID, int MailboxID, System.AsyncCallback callback, object asyncState);

    MailboxIDInfo EndMailboxInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxName")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxName(string SessionID, int MailboxID, string Name, System.AsyncCallback callback, object asyncState);

    bool EndMailboxName(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxSetContact")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxSetContact(string SessionID, int MailboxID, int UserID, NetworkContactType ContactType, System.AsyncCallback callback, object asyncState);

    bool EndMailboxSetContact(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxX12Delimiters")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxX12Delimiters(string SessionID, int MailboxID, byte SegTerm, byte ElmSep, byte SubElmSep, System.AsyncCallback callback, object asyncState);

    bool EndMailboxX12Delimiters(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "https://os.ecgrid.io/MailboxInBoxTimeout")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.IAsyncResult BeginMailboxInBoxTimeout(string SessionID, int MailboxID, short Minutes, System.AsyncCallback callback, object asyncState);

    bool EndMailboxInBoxTimeout(System.IAsyncResult result);

    #endregion

    #region Synchronous Method Service Contracts 

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackPendingListExA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo[] CallBackPendingListExA(string SessionID, int NetworkID, int MailboxID, string NetworkExclude);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackFailedList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo[] CallBackFailedList(string SessionID, short MaxDays);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackFailedListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo[] CallBackFailedListEx(string SessionID, int NetworkID, int MailboxID, short MaxDays);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportMonthly")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportMonthly(string SessionID, short Report, System.DateTime Month);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportMonthlyEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportMonthlyEx(string SessionID, int NetworkID, int MailboxID, short Report, System.DateTime Month);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportTrafficStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportTrafficStats(string SessionID, System.DateTime TargetTime, short NumPeriods, StatisticsPeriod Period);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportTrafficStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportTrafficStatsEx(string SessionID, int NetworkID, int MailboxID, System.DateTime TargetTime, short NumPeriods, StatisticsPeriod Period);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportTrafficStatsPublic")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportTrafficStatsPublic();

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportInstantStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportInstantStats(string SessionID, short Minutes1, short Minutes2);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportInstantStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportInstantStatsEx(string SessionID, int NetworkID, int MailboxID, int ECGridID, short Minutes1, short Minutes2);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportMailboxStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportMailboxStats(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportMailboxStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportMailboxStatsEx(string SessionID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportMailboxInterchangeStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportMailboxInterchangeStats(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportMailboxInterchangeStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportMailboxInterchangeStatsEx(string SessionID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportInterchangeStats")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportInterchangeStats(string SessionID, System.DateTime StartTime, System.DateTime EndTime, Direction Direction);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ReportInterchangeStatsEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet ReportInterchangeStatsEx(string SessionID, System.DateTime StartTime, System.DateTime EndTime, Direction Direction, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo CommAdd(
                string SessionID,
                int NetworkID,
                int MailboxID,
                NetworkGatewayCommChannel CommType,
                int OwnerUserID,
                bool ECGridHosted,
                string Identifier,
                string URL,
                string Version,
                bool SignData,
                bool EncryptData,
                bool CompressData,
                ReceiptType ReceiptType,
                HTTPAuthType HTTPAuthentication,
                string HTTPUser,
                string HTTPPassword,
                UseType UseType,
                System.DateTime BeginUsage,
                System.DateTime EndUsage,
                Status Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommSetPair")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo[] CommSetPair(string SessionID, int ECGridIDFrom, int ECGridIDTo, string Identifier1, string Identifier2);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommPair")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo[] CommPair(string SessionID, NetworkGatewayCommChannel CommType, int ECGridIDFrom, int ECGridIDTo, string DefaultID, bool TestMode);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo CommUpdate(
                string SessionID,
                int CommID,
                int OwnerUserID,
                string Identifier,
                string URL,
                string Version,
                bool SignData,
                bool EncryptData,
                bool CompressData,
                ReceiptType ReceiptType,
                HTTPAuthType HTTPAuthentication,
                string HTTPUser,
                string HTTPPassword,
                UseType UseType,
                System.DateTime BeginUsage,
                System.DateTime EndUsage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo[] CommList(string SessionID, NetworkGatewayCommChannel CommType, bool PrivateKeyRequired, UseType UseType, bool ShowInactive, bool WithCerts);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo[] CommListEx(string SessionID, int NetworkID, int MailboxID, NetworkGatewayCommChannel CommType, bool PrivateKeyRequired, UseType UseType, bool ShowInactive, bool WithCerts);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommFind")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo[] CommFind(string SessionID, string Identifier, NetworkGatewayCommChannel CommType, bool PrivateKeyRequired, UseType UseType, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo CommInfo(string SessionID, int CommID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommSetStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CommSetStatus(string SessionID, int CommID, Status Status);

    // CODEGEN: Parameter 'Cert' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertificateAddPublic")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CertificateAddPublicResponse CertificateAddPublic(CertificateAddPublicRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertificateAddPublicA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo CertificateAddPublicA(string SessionID, int CommID, CertificateType CertType, string KeyId, string UserId, System.DateTime BeginUsage, CertificateUsage Usage, string PartnerCommID, string PartnerURL, string CertBase64);

    // CODEGEN: Parameter 'Cert' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertAddPrivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CertAddPrivateResponse CertAddPrivate(CertAddPrivateRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertAddPrivateA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    as2CommInfo CertAddPrivateA(string SessionID, int CommID, CertificateType CertType, string KeyId, string UserId, System.DateTime BeginUsage, CertificateUsage Usage, string PartnerAS2ID, string CertBase64, string Password);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertificateCreatePrivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo CertificateCreatePrivate(string SessionID, int CommID, System.DateTime BeginUsage, CertificateUsage Usage, CertificateSecureHashAlgorithm SecureHashAlgorithm, string PartnerAS2ID, System.DateTime Expires);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertificateRenewPrivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CommIDInfo CertificateRenewPrivate(string SessionID, int CommID, int CertKeyID, short OverlapDays, short Years, CertificateSecureHashAlgorithm SecureHashAlgorithm);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CertificateTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CertificateTerminate(string SessionID, int CommID, int CertKeyID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CommDefaultMailbox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CommDefaultMailbox(string SessionID, int CommID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NowUTC")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.DateTime NowUTC();

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeDate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.DateTime InterchangeDate(string InterchangeHeader);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/Version")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string Version();

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/X400Format")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string X400Format(
                string Country,
                string ADMD,
                string PRMD,
                string Organization,
                string OrganizationalUnit1,
                string OrganizationalUnit2,
                string OrganizationalUnit3,
                string OrganizationalUnit4,
                string Surname,
                string GivenName,
                string Initials,
                string Generation,
                string CommonName,
                string DDA,
                string X_121,
                string N_ID,
                string T_TY,
                string T_ID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUploadExA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    long ParcelUploadExA(string SessionID, int NetworkID, int MailboxID, string FileName, string ContentBase64);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUpdateStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelUpdateStatus(string SessionID, long ParcelID, ParcelStatus Status, bool TransLogOnly);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUpdateLocalStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelUpdateLocalStatus(string SessionID, long ParcelID, short Status);

    // CODEGEN: Parameter 'Content' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUploadMft")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelUploadMftResponse ParcelUploadMft(ParcelUploadMftRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUploadMftA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    long ParcelUploadMftA(string SessionID, string FileName, string ContentBase64, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelTest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    long ParcelTest(string SessionID, int ECGridIDFrom, int ECGridIDTo, EDIStandard DocumentType);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelSetMailbagControlID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelSetMailbagControlID(string SessionID, long ParcelID, string MailbagControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelFindMailbagControlID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfo[] ParcelFindMailbagControlID(string SessionID, int NetworkID, int MailboxID, string MailbagControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelFindMailbagControlIDTo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfo[] ParcelFindMailbagControlIDTo(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, string MailbagControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelManifest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ManifestInfo[] ParcelManifest(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeManifest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ManifestInfo[] InterchangeManifest(string SessionID, long InterchangeID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelNoteList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelNote[] ParcelNoteList(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBoxArchiveExShort")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBoxArchiveExShort(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBoxArchiveDescEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBoxArchiveDescEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxArchiveExShort")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxArchiveExShort(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxArchiveDescEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxArchiveDescEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string MailbagControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxError")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxError(string SessionID, System.DateTime BeginDate, System.DateTime EndDate);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxErrorEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxErrorEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxInProcess")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxInProcess(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelOutBoxInProcessEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelOutBoxInProcessEx(string SessionID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo InterchangeInfo(string SessionID, long InterchangeID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeInBox(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfoCollection InterchangeInBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeInBoxEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfoCollection InterchangeInBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBox(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxArchive")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfoCollection InterchangeOutBoxArchive(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxArchiveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfoCollection InterchangeOutBoxArchiveEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo, string InterchangeControlID, short PageNo, short RecordsPerPage);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxPending")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxPending(string SessionID, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxPendingEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxPendingEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxPending")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeInBoxPending(string SessionID, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxPendingEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeInBoxPendingEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxBlocked")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeInBoxBlocked(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeInBoxBlockedEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeInBoxBlockedEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxBlocked")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxBlocked(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxBlockedEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxBlockedEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeHeaderInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo InterchangeHeaderInfo(string SessionID, string InterchangeHeader);

    // CODEGEN: Parameter 'InterchangeHeader' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeHeaderInfoB")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeHeaderInfoBResponse InterchangeHeaderInfoB(InterchangeHeaderInfoBRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxNoRoute")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxNoRoute(string SessionID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeOutBoxNoRouteEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDInfo[] InterchangeOutBoxNoRouteEx(string SessionID, int NetworkID, int MailboxID, System.DateTime BeginDate, System.DateTime EndDate, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeResend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterchangeIDStatus InterchangeResend(string SessionID, long InterchangeID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterchangeCancel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool InterchangeCancel(string SessionID, long InterchangeID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackEventInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackEventIDInfo CallBackEventInfo(string SessionID, int CallBackEventID, short QueueCount);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackEventListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackEventIDInfo[] CallBackEventListEx(string SessionID, int NetworkID, int MailboxID, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackEventIDInfo CallBackAddEx(string SessionID, int NetworkID, int MailboxID, int UserID, Objects SystemObject, short ObjectStatus, Direction Direction, short Frequency, short MaxRetries, string URL, HTTPAuthType HTTPAuthentication, string HTTPUser, string HTTPPassword, Status Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackEventSetStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CallBackEventSetStatus(string SessionID, int CallBackEventID, Status Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackQueueInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo CallBackQueueInfo(string SessionID, long CallBackQueueID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackTest")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo CallBackTest(string SessionID, int CallBackEventID, long ParcelID, long InterchangeID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackPendingList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo[] CallBackPendingList(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CallBackPendingListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CallBackQueueIDInfo[] CallBackPendingListEx(string SessionID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxDescription")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxDescription(string SessionID, int MailboxID, string Description);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxUse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxUse(string SessionID, int MailboxID, UseType UseType);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MailboxIDInfo[] MailboxList(string SessionID, string Name);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MailboxIDInfo[] MailboxListEx(string SessionID, int NetworkID, string Name);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int TPAdd(string SessionID, string Qualifier, string ID, string Description);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPAddVAN")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int TPAddVAN(string SessionID, int NetworkID, string Qualifier, string ID, string Description);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int TPAddEx(string SessionID, int NetworkID, int MailboxID, string Qualifier, string ID, string Description, RoutingGroup RoutingGroup);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPMove")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int TPMove(string SessionID, int ECGridID, System.DateTime MoveDateTime);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPMoveMailbox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int TPMoveMailbox(string SessionID, int ECGridID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPMoveEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int TPMoveEx(string SessionID, int NetworkID, int MailboxID, int ECGridID, System.DateTime MoveDateTime);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPUpdateDescription")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPUpdateDescription(string SessionID, int ECGridID, string Description);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPUpdateDataEMail")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPUpdateDataEMail(string SessionID, int ECGridID, EMailSystem EMailSystem, string DataEMail, EMailPayload PayloadPosition);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPActivate(string SessionID, int ECGridID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPSuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPSuspend(string SessionID, int ECGridID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPTerminate(string SessionID, int ECGridID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPSetRoutingGroup")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPSetRoutingGroup(string SessionID, int ECGridID, RoutingGroup RoutingGroup);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo TPInfo(string SessionID, int ECGridID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPSearch")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo[] TPSearch(string SessionID, string Qualifier, string ID, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPSearchEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo[] TPSearchEx(string SessionID, int NetworkID, int MailboxID, string Qualifier, string ID, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo[] TPList(string SessionID, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo[] TPListEx(string SessionID, int NetworkID, int MailboxID, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPListExPaged")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfoCollection TPListExPaged(string SessionID, int NetworkID, int MailboxID, bool ShowInactive, short PageSize, short PageNumber);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPListByOwner")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfoCollection TPListByOwner(string SessionID, int OwnerUserID, OrderBy OrderBy, bool ShowInactive, short PageSize, short PageNumber);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPFindEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo[] TPFindEx(string SessionID, int NetworkID, int MailboxID, string Description, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPGetMailboxDefault")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ECGridIDInfo TPGetMailboxDefault(string SessionID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPSetMailboxDefault")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPSetMailboxDefault(string SessionID, int ECGridID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/TPSetOwner")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool TPSetOwner(string SessionID, int ECGridID, int OwnerUserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectIDInfo InterconnectAdd(string SessionID, int ECGridID1, int ECGridID2, string Reference, string ContactName, string ContactEMail, bool NotifyContact, bool Preconfirm, string Note);

    // CODEGEN: Parameter 'AttachmentContent' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectNote")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectNoteResponse InterconnectNote(InterconnectNoteRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectCancel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool InterconnectCancel(string SessionID, int InterconnectID, string Note, eMailTo EMailTo, string OtherEMailAddress);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectIDInfo InterconnectInfo(string SessionID, int InterconnectID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectInfoGUID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectIDInfo InterconnectInfoGUID(string SessionID, string UniqueID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectNoteList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectNote[] InterconnectNoteList(string SessionID, int InterconnectID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectListByECGridID")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectIDInfo[] InterconnectListByECGridID(string SessionID, int ECGridID1, int ECGridID2);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectListByStatus")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectIDInfo[] InterconnectListByStatus(string SessionID, StatusInterconnect Status, int ECGridID, short MaxDays);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectListByStatusEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    InterconnectIDInfo[] InterconnectListByStatusEx(string SessionID, int NetworkID, int MailboxID, StatusInterconnect IntStatus, int ECGridID, short MaxDays);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectCount")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet InterconnectCount(string SessionID, short MaxDays);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/InterconnectCountEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet InterconnectCountEx(string SessionID, int NetworkID, int MailboxID, int ECGridID, short MaxDays);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MigrationAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int MigrationAdd(string SessionID, string Name, System.DateTime Scheduled, int TargetNetworkId, int TargetMailboxId, MigrationStatus Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MigrationAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int MigrationAddEx(string SessionID, int NetworkId, int MailboxId, string Name, System.DateTime Scheduled, int TargetNetworkId, int TargetMailboxId, MigrationStatus Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MigrationList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MigrationIDInfo[] MigrationList(string SessionID, MigrationStatus Status, bool ShowCanceled);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MigrationListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MigrationIDInfo[] MigrationListEx(string SessionID, int NetworkID, int MailboxID, MigrationStatus Status, bool ShowCanceled);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MigrationInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MigrationIDInfo MigrationInfo(string SessionID, int MigrationID, int MigrationBatchID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MigrationAddTP")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MigrationAddTP(string SessionID, int MigrationID, int MigrationBatchID, int ECGridID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int CarbonCopyAdd(string SessionID, int ECGridIDFrom, int ECGridIDTo, int ECGridIDCCFrom, int ECGridIDCCTo, string GSFrom, string GSTo, string TransactionSet);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int CarbonCopyAddEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, int ECGridIDCCFrom, int ECGridIDCCTo, string GSFrom, string GSTo, string TransactionSet);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CarbonCopyActivate(string SessionID, int CarbonCopyID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopySuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CarbonCopySuspend(string SessionID, int CarbonCopyID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool CarbonCopyTerminate(string SessionID, int CarbonCopyID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CarbonCopyIDInfo CarbonCopyInfo(string SessionID, int CarbonCopyID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CarbonCopyIDInfo[] CarbonCopyList(string SessionID, int ECGridIDFrom, int ECGridIDTo, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/CarbonCopyListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    CarbonCopyIDInfo[] CarbonCopyListEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBox(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBoxEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBoxEx(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInBoxExShort")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfoCollection ParcelInBoxExShort(string SessionID, int NetworkID, int MailboxID, int ECGridIDFrom, int ECGridIDTo, ParcelStatus Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelIDInfo ParcelInfo(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    FileInfo ParcelDownload(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    FileInfo ParcelDownloadA(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadS3")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string ParcelDownloadS3(string SessionID, long ParcelID, string AccessKey, string SecretKey, string Bucket, string Prefix, string Region);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadNoUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    FileInfo ParcelDownloadNoUpdate(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadNoUpdateA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    FileInfo ParcelDownloadNoUpdateA(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadConfirm")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelDownloadConfirm(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelAcknowledgmentNote")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelAcknowledgmentNote(string SessionID, long ParcelID, string Subject, string Note);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadCancel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelDownloadCancel(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadConfirmPendingAck")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelDownloadConfirmPendingAck(string SessionID, long ParcelID, ParcelStatus Status);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelDownloadReset")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelDownloadReset(string SessionID, long ParcelID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelResend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ParcelResend(string SessionID, long ParcelID);

    // CODEGEN: Parameter 'Content' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUpload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelUploadResponse ParcelUpload(ParcelUploadRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUploadA")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    long ParcelUploadA(string SessionID, string FileName, string ContentBase64);

    // CODEGEN: Parameter 'Content' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ParcelUploadEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ParcelUploadExResponse ParcelUploadEx(ParcelUploadExRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/Login")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string Login(string LoginName, string Password);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/GenerateAPIKey")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string GenerateAPIKey(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/GeneratePassword")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string GeneratePassword(string SessionID, short Length);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/Logout")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int Logout(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/ChangePassword")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool ChangePassword(string SessionID, string OldPassword, string NewPassword);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/WhoAmI")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    SessionInfo WhoAmI(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int UserAdd(string SessionID, int MailboxID, string LoginName, string Password, string RecoveryQuestion, string RecoveryAnswer, string FirstName, string LastName, string Company, string EMail, string Phone, string CellPhone, CellCarrier CellCarrier, AuthLevel AuthLevel);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int UserAddEx(string SessionID, int NetworkID, int MailboxID, string LoginName, string Password, string RecoveryQuestion, string RecoveryAnswer, string FirstName, string LastName, string Company, string EMail, string Phone, string CellPhone, CellCarrier CellCarrier, AuthLevel AuthLevel);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo UserInfo(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserInfobyLogin")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo UserInfobyLogin(string SessionID, string LoginName);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserUpdate(string SessionID, int UserID, string FirstName, string LastName, string Company, string EMail, string Phone, string CellPhone, CellCarrier CellCarrier, AuthLevel AuthLevel);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserPassword")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserPassword(string SessionID, int UserID, string CurrentRecoveryAnswer, string Password, string RecoveryQuestion, string RecoveryAnswer);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserActivate(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserSuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserSuspend(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserTerminate(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserSendSMS")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserSendSMS(string SessionID, int UserID, string Text);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserReset")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserReset(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo[] UserList(string SessionID, string Name);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserListEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo[] UserListEx(string SessionID, int NetworkID, int MailboxID, string Name);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserListLockedOut")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo[] UserListLockedOut(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserListLockedOutEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo[] UserListLockedOutEx(string SessionID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserSetNetworkMailbox")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserSetNetworkMailbox(string SessionID, int UserID, int NetworkID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserSetAuthLevel")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserSetAuthLevel(string SessionID, int UserID, AuthLevel AuthLevel);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserSetMaxSessions")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool UserSetMaxSessions(string SessionID, int UserID, short MaxSessions);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/UserGetAPIKey")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    string UserGetAPIKey(string SessionID, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/SessionLogCurrent")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    SessionLogInfo SessionLogCurrent(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/SessionLog")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    SessionLogInfo[] SessionLog(string SessionID, short MaxRecords);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/SessionLogEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    SessionLogInfo[] SessionLogEx(string SessionID, int UserID, System.DateTime StartTime, System.DateTime EndTime, short MaxRecords);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/KeyGet")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    KeyValue KeyGet(string SessionID, string Key, Objects SystemObject, long ObjectID, KeyVisibility Visibility);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/KeyList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    KeyValue[] KeyList(string SessionID, Objects SystemObject, long ObjectID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/KeySet")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool KeySet(string SessionID, string Key, Objects SystemObject, long ObjectID, KeyVisibility Visibility, string Value, string Meta, int DaysToLive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/KeyRemove")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool KeyRemove(string SessionID, string Key, Objects SystemObject, long ObjectID, KeyVisibility Visibility);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/StatusList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    StatusInfo[] StatusList(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    NetworkIDInfo NetworkInfo(string SessionID, int NetworkID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkInfoWithLog")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    NetworkIDInfo NetworkInfoWithLog(string SessionID, int NetworkID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    NetworkIDInfo[] NetworkList(string SessionID, string Name);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkStatusSummary")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Data.DataSet NetworkStatusSummary(string SessionID, bool ShowInactive);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkOutageList")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    NetworkIDInfo[] NetworkOutageList(string SessionID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkUpdate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool NetworkUpdate(string SessionID, int NetworkID, string Name, string Location);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkSetContact")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool NetworkSetContact(string SessionID, int NetworkID, int UserID, NetworkContactType ContactType);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkGetContact")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UserIDInfo NetworkGetContact(string SessionID, int NetworkID, NetworkContactType ContactType);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkSetWebsite")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool NetworkSetWebsite(string SessionID, int NetworkID, string URL, NetworkWebsiteType WebsiteType);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkX12Delimiters")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool NetworkX12Delimiters(string SessionID, int NetworkID, byte SegTerm, byte ElmSep, byte SubElmSep);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/NetworkRootDeleteOnDownload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool NetworkRootDeleteOnDownload(string SessionID, int NetworkID, bool DeleteOnDownload);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxAdd")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int MailboxAdd(string SessionID, string Name, int UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxAddEx")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    int MailboxAddEx(string SessionID, int NetworkID, string Name, string UserID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxActivate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxActivate(string SessionID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxSuspend")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxSuspend(string SessionID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxTerminate")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxTerminate(string SessionID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxManaged")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxManaged(string SessionID, int MailboxID, bool Managed);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxDeleteOnDownload")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxDeleteOnDownload(string SessionID, int MailboxID, bool DeleteOnDownload);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxInfo")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MailboxIDInfo MailboxInfo(string SessionID, int MailboxID);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxName")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxName(string SessionID, int MailboxID, string Name);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxSetContact")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxSetContact(string SessionID, int MailboxID, int UserID, NetworkContactType ContactType);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxX12Delimiters")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxX12Delimiters(string SessionID, int MailboxID, byte SegTerm, byte ElmSep, byte SubElmSep);

    [System.ServiceModel.OperationContractAttribute(Action = "https://os.ecgrid.io/MailboxInBoxTimeout")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    bool MailboxInBoxTimeout(string SessionID, int MailboxID, short Minutes);

    #endregion
}

#region Classes, Objects, Enums

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CallBackQueueIDInfo
{

    private long callBackQueueIDField;

    private System.DateTime dateField;

    private CallBackEventIDInfo callBackEventField;

    private short callsRemainingField;

    private System.DateTime nextCallField;

    private StatusCallBack statusField;

    private long objectIDField;

    private int userIDField;

    private bool testField;

    private CallBackLogInfo[] callBackLogField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public long CallBackQueueID
    {
        get
        {
            return this.callBackQueueIDField;
        }
        set
        {
            this.callBackQueueIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime Date
    {
        get
        {
            return this.dateField;
        }
        set
        {
            this.dateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public CallBackEventIDInfo CallBackEvent
    {
        get
        {
            return this.callBackEventField;
        }
        set
        {
            this.callBackEventField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public short CallsRemaining
    {
        get
        {
            return this.callsRemainingField;
        }
        set
        {
            this.callsRemainingField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime NextCall
    {
        get
        {
            return this.nextCallField;
        }
        set
        {
            this.nextCallField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public StatusCallBack Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public long ObjectID
    {
        get
        {
            return this.objectIDField;
        }
        set
        {
            this.objectIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public bool Test
    {
        get
        {
            return this.testField;
        }
        set
        {
            this.testField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 9)]
    public CallBackLogInfo[] CallBackLog
    {
        get
        {
            return this.callBackLogField;
        }
        set
        {
            this.callBackLogField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CallBackEventIDInfo
{

    private int callBackEventIDField;

    private int networkIDField;

    private int mailboxIDField;

    private int userIDField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private Objects systemObjectField;

    private short objectStatusField;

    private string statusCodeField;

    private Direction directionField;

    private short frequencyField;

    private short maxCallsField;

    private Status statusField;

    private string uRLField;

    private HTTPAuthInfo hTTPAuthenticationField;

    private CallBackQueueIDInfo[] callBackQueueField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int CallBackEventID
    {
        get
        {
            return this.callBackEventIDField;
        }
        set
        {
            this.callBackEventIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public Objects SystemObject
    {
        get
        {
            return this.systemObjectField;
        }
        set
        {
            this.systemObjectField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public short ObjectStatus
    {
        get
        {
            return this.objectStatusField;
        }
        set
        {
            this.objectStatusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string StatusCode
    {
        get
        {
            return this.statusCodeField;
        }
        set
        {
            this.statusCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public Direction Direction
    {
        get
        {
            return this.directionField;
        }
        set
        {
            this.directionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public short Frequency
    {
        get
        {
            return this.frequencyField;
        }
        set
        {
            this.frequencyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public short MaxCalls
    {
        get
        {
            return this.maxCallsField;
        }
        set
        {
            this.maxCallsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public string URL
    {
        get
        {
            return this.uRLField;
        }
        set
        {
            this.uRLField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public HTTPAuthInfo HTTPAuthentication
    {
        get
        {
            return this.hTTPAuthenticationField;
        }
        set
        {
            this.hTTPAuthenticationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 15)]
    public CallBackQueueIDInfo[] CallBackQueue
    {
        get
        {
            return this.callBackQueueField;
        }
        set
        {
            this.callBackQueueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum Objects
{

    /// <remarks/>
    System,

    /// <remarks/>
    User,

    /// <remarks/>
    Network,

    /// <remarks/>
    Mailbox,

    /// <remarks/>
    ECGridID,

    /// <remarks/>
    Interconnect,

    /// <remarks/>
    Migration,

    /// <remarks/>
    Parcel,

    /// <remarks/>
    Interchange,

    /// <remarks/>
    CarbonCopy,

    /// <remarks/>
    CallBackEvent,

    /// <remarks/>
    AS2,

    /// <remarks/>
    Comm,

    /// <remarks/>
    GISB,

    /// <remarks/>
    ParcelNotes,

    /// <remarks/>
    InterconnectNote,

    /// <remarks/>
    PriceList,

    /// <remarks/>
    Contract,

    /// <remarks/>
    Invoice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum Direction
{

    /// <remarks/>
    NoDir,

    /// <remarks/>
    OutBox,

    /// <remarks/>
    InBox,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum Status
{

    /// <remarks/>
    Development,

    /// <remarks/>
    Active,

    /// <remarks/>
    Preproduction,

    /// <remarks/>
    Suspended,

    /// <remarks/>
    Terminated,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class HTTPAuthInfo
{

    private HTTPAuthType typeField;

    private string userField;

    private string passwordField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public HTTPAuthType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string User
    {
        get
        {
            return this.userField;
        }
        set
        {
            this.userField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Password
    {
        get
        {
            return this.passwordField;
        }
        set
        {
            this.passwordField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum HTTPAuthType
{

    /// <remarks/>
    None,

    /// <remarks/>
    Basic,

    /// <remarks/>
    Digest,

    /// <remarks/>
    Certificate,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class StatusInfo
{

    private short codeField;

    private string qualifierField;

    private string messageField;

    private string levelField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public short Code
    {
        get
        {
            return this.codeField;
        }
        set
        {
            this.codeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string Qualifier
    {
        get
        {
            return this.qualifierField;
        }
        set
        {
            this.qualifierField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Message
    {
        get
        {
            return this.messageField;
        }
        set
        {
            this.messageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string Level
    {
        get
        {
            return this.levelField;
        }
        set
        {
            this.levelField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class KeyValue
{

    private string keyField;

    private string valueField;

    private string metaField;

    private System.DateTime createdField;

    private System.DateTime expiresField;

    private KeyVisibility visibilityField;

    private int networkIDField;

    private int mailboxIDField;

    private int userIDField;

    private string sessionIDField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string Key
    {
        get
        {
            return this.keyField;
        }
        set
        {
            this.keyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string Value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Meta
    {
        get
        {
            return this.metaField;
        }
        set
        {
            this.metaField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Expires
    {
        get
        {
            return this.expiresField;
        }
        set
        {
            this.expiresField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public KeyVisibility Visibility
    {
        get
        {
            return this.visibilityField;
        }
        set
        {
            this.visibilityField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public string SessionID
    {
        get
        {
            return this.sessionIDField;
        }
        set
        {
            this.sessionIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum KeyVisibility
{

    /// <remarks/>
    Private,

    /// <remarks/>
    Shared,

    /// <remarks/>
    Public,

    /// <remarks/>
    Session,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class SessionEvents
{

    private APICall aPICallField;

    private System.DateTime dateField;

    private int millisecondsField;

    private string ipField;

    private RetCode returnCodeField;

    private string commentField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public APICall APICall
    {
        get
        {
            return this.aPICallField;
        }
        set
        {
            this.aPICallField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime Date
    {
        get
        {
            return this.dateField;
        }
        set
        {
            this.dateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int Milliseconds
    {
        get
        {
            return this.millisecondsField;
        }
        set
        {
            this.millisecondsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string ip
    {
        get
        {
            return this.ipField;
        }
        set
        {
            this.ipField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public RetCode ReturnCode
    {
        get
        {
            return this.returnCodeField;
        }
        set
        {
            this.returnCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string Comment
    {
        get
        {
            return this.commentField;
        }
        set
        {
            this.commentField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum APICall
{

    /// <remarks/>
    GenerateAPIKey,

    /// <remarks/>
    Login,

    /// <remarks/>
    Logout,

    /// <remarks/>
    ChangePassword,

    /// <remarks/>
    WhoAmI,

    /// <remarks/>
    UserAdd,

    /// <remarks/>
    UserAddEx,

    /// <remarks/>
    UserInfo,

    /// <remarks/>
    UserUpdate,

    /// <remarks/>
    UserActivate,

    /// <remarks/>
    UserSuspend,

    /// <remarks/>
    UserTerminate,

    /// <remarks/>
    UserReset,

    /// <remarks/>
    UserList,

    /// <remarks/>
    UserListEx,

    /// <remarks/>
    UserPassword,

    /// <remarks/>
    SessionLog,

    /// <remarks/>
    SessionLogEx,

    /// <remarks/>
    SessionLogCurrent,

    /// <remarks/>
    KeySave,

    /// <remarks/>
    KeyGet,

    /// <remarks/>
    KeyList,

    /// <remarks/>
    KeyRemove,

    /// <remarks/>
    UserSetNetworkMailbox,

    /// <remarks/>
    UserSetAuthLevel,

    /// <remarks/>
    UserListLockedOut,

    /// <remarks/>
    UserListLockedOutEx,

    /// <remarks/>
    UserResetAll,

    /// <remarks/>
    SetLocalTime,

    /// <remarks/>
    TerminateAPIKey,

    /// <remarks/>
    GeneratePassword,

    /// <remarks/>
    UserSendSMS,

    /// <remarks/>
    UserGetAPIKey,

    /// <remarks/>
    UserInfoByLogin,

    /// <remarks/>
    StatusList,

    /// <remarks/>
    UserSetMaxSessions,

    /// <remarks/>
    NetworkInfo,

    /// <remarks/>
    NetworkList,

    /// <remarks/>
    NetworkStatusSummary,

    /// <remarks/>
    NetworkOutageList,

    /// <remarks/>
    NetworkStart,

    /// <remarks/>
    NetworkStop,

    /// <remarks/>
    NetworkRestart,

    /// <remarks/>
    NetworkAdd,

    /// <remarks/>
    NetworkOwnerContact,

    /// <remarks/>
    NetworkErrorsContact,

    /// <remarks/>
    NetworkInterconnectsContact,

    /// <remarks/>
    NetworkNoticesContact,

    /// <remarks/>
    NetworkBillingContact,

    /// <remarks/>
    NetworkReportsContact,

    /// <remarks/>
    NetworkSetContact,

    /// <remarks/>
    NetworkGetContact,

    /// <remarks/>
    NetworkSetWebsite,

    /// <remarks/>
    NetworkSetStatus,

    /// <remarks/>
    NetworkInfoWithLog,

    /// <remarks/>
    NetworkBackupAllConfigs,

    /// <remarks/>
    NetworkX12Delimiters,

    /// <remarks/>
    NetworkCheckIn,

    /// <remarks/>
    NetworkRootDeleteOnDownload,

    /// <remarks/>
    NetworkUpdate,

    /// <remarks/>
    NetworkPause,

    /// <remarks/>
    MailboxAdd,

    /// <remarks/>
    MailboxAddEx,

    /// <remarks/>
    MailboxActivate,

    /// <remarks/>
    MailboxSuspend,

    /// <remarks/>
    MailboxTerminate,

    /// <remarks/>
    MailboxInfo,

    /// <remarks/>
    MailboxName,

    /// <remarks/>
    MailboxErrorsContact,

    /// <remarks/>
    MailboxInterconnectsContact,

    /// <remarks/>
    MailboxNoticesContact,

    /// <remarks/>
    MailboxX12Delimiters,

    /// <remarks/>
    MailboxInBoxTimeout,

    /// <remarks/>
    MailboxList,

    /// <remarks/>
    MailboxListEx,

    /// <remarks/>
    MailboxOwnerContact,

    /// <remarks/>
    MailboxManaged,

    /// <remarks/>
    MailboxDescription,

    /// <remarks/>
    MailboxUse,

    /// <remarks/>
    MailboxSetContact,

    /// <remarks/>
    MailboxDeleteOnDownload,

    /// <remarks/>
    TPAdd,

    /// <remarks/>
    TPAddVAN,

    /// <remarks/>
    TPAddEx,

    /// <remarks/>
    TPMove,

    /// <remarks/>
    TPMoveEx,

    /// <remarks/>
    TPUpdateDescription,

    /// <remarks/>
    TPActivate,

    /// <remarks/>
    TPSuspend,

    /// <remarks/>
    TPTerminate,

    /// <remarks/>
    TPInfo,

    /// <remarks/>
    TPSearch,

    /// <remarks/>
    TPSearchEx,

    /// <remarks/>
    TPList,

    /// <remarks/>
    TPListEx,

    /// <remarks/>
    TPFind,

    /// <remarks/>
    TPFindEx,

    /// <remarks/>
    TPDataEMail,

    /// <remarks/>
    TPSetMailboxDefault,

    /// <remarks/>
    TPGetMailboxDefault,

    /// <remarks/>
    TPEMailX400Format,

    /// <remarks/>
    TPMoveMailbox,

    /// <remarks/>
    TPSetRoutingGroup,

    /// <remarks/>
    TPListExPaged,

    /// <remarks/>
    TPListByOwner,

    /// <remarks/>
    TPSetOwner,

    /// <remarks/>
    InterconnectAdd,

    /// <remarks/>
    InterconnectUpdate,

    /// <remarks/>
    InterconnectNote,

    /// <remarks/>
    InterconnectCancel,

    /// <remarks/>
    InterconnectInfo,

    /// <remarks/>
    InterconnectNoteList,

    /// <remarks/>
    InterconnectListByECGridID,

    /// <remarks/>
    InterconnectListByStatus,

    /// <remarks/>
    InterconnectListByStatusEx,

    /// <remarks/>
    InterconnectAssignNetOps,

    /// <remarks/>
    InterconnectCount,

    /// <remarks/>
    InterconnectCountEx,

    /// <remarks/>
    InterconnectInfoGUID,

    /// <remarks/>
    MigrationAdd,

    /// <remarks/>
    MigrationAddEx,

    /// <remarks/>
    MigrationSendRequest,

    /// <remarks/>
    MigrationUpdate,

    /// <remarks/>
    MigrationStatus,

    /// <remarks/>
    MigrationInfo,

    /// <remarks/>
    MigrationList,

    /// <remarks/>
    MigrationListEx,

    /// <remarks/>
    MigrationECGridIDAdd,

    /// <remarks/>
    MigrationECGridIDRemove,

    /// <remarks/>
    MigrationECGridIDStatus,

    /// <remarks/>
    MigrationECGridIDNote,

    /// <remarks/>
    CarbonCopyAdd,

    /// <remarks/>
    CarbonCopyAddEx,

    /// <remarks/>
    CarbonCopyActivate,

    /// <remarks/>
    CarbonCopySuspend,

    /// <remarks/>
    CarbonCopyTerminate,

    /// <remarks/>
    CarbonCopyInfo,

    /// <remarks/>
    CarbonCopyList,

    /// <remarks/>
    CarbonCopyListEx,

    /// <remarks/>
    ParcelInBox,

    /// <remarks/>
    ParcelInBoxEx,

    /// <remarks/>
    ParcelDownload,

    /// <remarks/>
    ParcelDownloadInner,

    /// <remarks/>
    ParcelDownloadConfirm,

    /// <remarks/>
    ParcelUpload,

    /// <remarks/>
    ParcelUploadExA,

    /// <remarks/>
    ParcelInfo,

    /// <remarks/>
    ParcelMainfest,

    /// <remarks/>
    ParcelInterchangeManifest,

    /// <remarks/>
    ParcelNoteList,

    /// <remarks/>
    ParcelInBoxArchive,

    /// <remarks/>
    ParcelInBoxArchiveEx,

    /// <remarks/>
    ParcelOutBoxArchive,

    /// <remarks/>
    ParcelOutBoxArchiveEx,

    /// <remarks/>
    ParcelOutBoxError,

    /// <remarks/>
    ParcelOutBoxErrorEx,

    /// <remarks/>
    InterchangeInBox,

    /// <remarks/>
    InterchangeInBoxEx,

    /// <remarks/>
    InterchangeOutBox,

    /// <remarks/>
    InterchangeOutBoxEx,

    /// <remarks/>
    InterchangeHeaderInfo,

    /// <remarks/>
    ParcelDownloadReset,

    /// <remarks/>
    InterchangeOutBoxNoRoute,

    /// <remarks/>
    InterchangeOutBoxNoRouteEx,

    /// <remarks/>
    ParcelUploadGZip,

    /// <remarks/>
    InterchangeInfo,

    /// <remarks/>
    InterchangeResend,

    /// <remarks/>
    ParcelUploadGZipEx,

    /// <remarks/>
    ParcelUploadEx,

    /// <remarks/>
    ParcelSetMailbagControlID,

    /// <remarks/>
    ParcelUpdateStatus,

    /// <remarks/>
    ParcelUpdateLocalStatus,

    /// <remarks/>
    ParcelUploadMft,

    /// <remarks/>
    ParcelUploadDirectedGZip,

    /// <remarks/>
    ParcelDownloadConfirmPendingAck,

    /// <remarks/>
    InterchangeHeaderInfoB,

    /// <remarks/>
    ParcelDownloadGZip,

    /// <remarks/>
    ParcelDownloadCancel,

    /// <remarks/>
    ParcelTest,

    /// <remarks/>
    InterchangeManifest,

    /// <remarks/>
    ParcelOutBoxInProcess,

    /// <remarks/>
    ParcelOutBoxInProcessEx,

    /// <remarks/>
    ParcelResend,

    /// <remarks/>
    InterchangeCancel,

    /// <remarks/>
    ParcelAcknowledgmentNote,

    /// <remarks/>
    InterchangeOutBoxPending,

    /// <remarks/>
    InterchangeOutBoxPendingEx,

    /// <remarks/>
    InterchangeInBoxPending,

    /// <remarks/>
    InterchangeInBoxPendingEx,

    /// <remarks/>
    InterchangeInBoxArchive,

    /// <remarks/>
    InterchangeInBoxArchiveEx,

    /// <remarks/>
    InterchangeOutBoxArchive,

    /// <remarks/>
    InterchangeOutBoxArchiveEx,

    /// <remarks/>
    ParcelInBoxArchiveDescEx,

    /// <remarks/>
    ParcelOutBoxArchiveDescEx,

    /// <remarks/>
    ParcelArchive,

    /// <remarks/>
    ParcelArchivePending,

    /// <remarks/>
    InterchangeArchive,

    /// <remarks/>
    InterchangeArchivePending,

    /// <remarks/>
    ParcelDownloadS3,

    /// <remarks/>
    ParcelInBoxExShort,

    /// <remarks/>
    ParcelInBoxArchiveExShort,

    /// <remarks/>
    ParcelOutBoxArchiveExShort,

    /// <remarks/>
    InterchangeInBoxBlocked,

    /// <remarks/>
    InterchangeInBoxBlockedEx,

    /// <remarks/>
    InterchangeOutBoxBlocked,

    /// <remarks/>
    InterchangeOutBoxBlockedEx,

    /// <remarks/>
    ParcelFindMailbagControlID,

    /// <remarks/>
    ParcelUploadA,

    /// <remarks/>
    ParcelUploadMftA,

    /// <remarks/>
    ParcelDownloadA,

    /// <remarks/>
    ParcelDownloadNoUpdate,

    /// <remarks/>
    ParcelDownloadNoUpdateA,

    /// <remarks/>
    ParcelUploadExAdmin,

    /// <remarks/>
    ParcelUploadMftAdmin,

    /// <remarks/>
    ParcelFindMailbagControlIDTo,

    /// <remarks/>
    InterchangeCarbonCopy,

    /// <remarks/>
    CallBackAdd,

    /// <remarks/>
    CallBackActivate,

    /// <remarks/>
    CallBackSuspend,

    /// <remarks/>
    CallBackTerminate,

    /// <remarks/>
    CallBackList,

    /// <remarks/>
    CallBackListEx,

    /// <remarks/>
    CallBackEventList,

    /// <remarks/>
    CallBackEventListEx,

    /// <remarks/>
    CallBackInvoke,

    /// <remarks/>
    CallBackTest,

    /// <remarks/>
    CallBackPendingList,

    /// <remarks/>
    CallBackPendingListEx,

    /// <remarks/>
    CallBackQueueInfo,

    /// <remarks/>
    CallBackEventInfo,

    /// <remarks/>
    CallBackAddEx,

    /// <remarks/>
    CallBackFailedList,

    /// <remarks/>
    CallBackFailedListEx,

    /// <remarks/>
    CallBackEventSetStatus,

    /// <remarks/>
    CallBackPendingListExA,

    /// <remarks/>
    ReportMonthly,

    /// <remarks/>
    ReportMonthlyEx,

    /// <remarks/>
    ReportTrafficStats,

    /// <remarks/>
    ReportTrafficStatsEx,

    /// <remarks/>
    ReportInstantStats,

    /// <remarks/>
    ReportInstantStatsEx,

    /// <remarks/>
    ReportMailboxStats,

    /// <remarks/>
    ReportMailboxStatsEx,

    /// <remarks/>
    ReportInterchangeStats,

    /// <remarks/>
    ReportInterchangeStatsEx,

    /// <remarks/>
    ReportAdHoc,

    /// <remarks/>
    ReportTagVerifyJson,

    /// <remarks/>
    ReportMailboxInterchangeStats,

    /// <remarks/>
    ReportMailboxInterchangeStatsEx,

    /// <remarks/>
    AS2Add,

    /// <remarks/>
    AS2Update,

    /// <remarks/>
    AS2Activate,

    /// <remarks/>
    AS2Suspend,

    /// <remarks/>
    AS2Terminate,

    /// <remarks/>
    AS2CertAddPublic,

    /// <remarks/>
    AS2CertAddPrivate,

    /// <remarks/>
    AS2CertTerminate,

    /// <remarks/>
    AS2Find,

    /// <remarks/>
    AS2List,

    /// <remarks/>
    AS2ListEx,

    /// <remarks/>
    AS2Info,

    /// <remarks/>
    AS2CertCreatePrivate,

    /// <remarks/>
    AS2Pair,

    /// <remarks/>
    AS2DefaultMailbox,

    /// <remarks/>
    AS2SetPair,

    /// <remarks/>
    AS2SetStatus,

    /// <remarks/>
    AS2CertRenewPrivate,

    /// <remarks/>
    AS2PairTest,

    /// <remarks/>
    AS2CertsExpiring,

    /// <remarks/>
    GISBAdd,

    /// <remarks/>
    GISBUpdate,

    /// <remarks/>
    GISBActivate,

    /// <remarks/>
    GISBSuspend,

    /// <remarks/>
    GISBTerminate,

    /// <remarks/>
    GISBKeyAdd,

    /// <remarks/>
    GISBKeyTerminate,

    /// <remarks/>
    GISBFind,

    /// <remarks/>
    GISBList,

    /// <remarks/>
    GISBListEx,

    /// <remarks/>
    GISBInfo,

    /// <remarks/>
    CertificateAddPublic,

    /// <remarks/>
    CertificateAddPrivate,

    /// <remarks/>
    CertificateCreatePrivate,

    /// <remarks/>
    CertificateSetUsageDates,

    /// <remarks/>
    CertificateTerminate,

    /// <remarks/>
    CertificateAddPublicA,

    /// <remarks/>
    CertificateAddPrivateA,

    /// <remarks/>
    CertificateRenewPrivate,

    /// <remarks/>
    CommAdd,

    /// <remarks/>
    CommUpdate,

    /// <remarks/>
    CommSetStatus,

    /// <remarks/>
    CommFind,

    /// <remarks/>
    CommList,

    /// <remarks/>
    CommListEx,

    /// <remarks/>
    CommInfo,

    /// <remarks/>
    CommPair,

    /// <remarks/>
    CommSetPair,

    /// <remarks/>
    CommDefaultMailbox,

    /// <remarks/>
    ContractInfo,

    /// <remarks/>
    ContractList,

    /// <remarks/>
    ContractListEx,

    /// <remarks/>
    ContractAdd,

    /// <remarks/>
    ContractActivate,

    /// <remarks/>
    ContractSuspend,

    /// <remarks/>
    ContractTerminate,

    /// <remarks/>
    ContractExpiring,

    /// <remarks/>
    ContractSet,

    /// <remarks/>
    ContractSetEx,

    /// <remarks/>
    PricelistInfo,

    /// <remarks/>
    PricelistAdd,

    /// <remarks/>
    PricelistLineAdd,

    /// <remarks/>
    PricelistLineDelete,

    /// <remarks/>
    InvoiceCreate,

    /// <remarks/>
    InvoiceInfo,

    /// <remarks/>
    InvoiceList,

    /// <remarks/>
    InvoiceSetStatus,

    /// <remarks/>
    InvoiceCalculateLineItem,

    /// <remarks/>
    RouterInProcessPending,

    /// <remarks/>
    RouterInProcess,

    /// <remarks/>
    RouterToProcess,

    /// <remarks/>
    RouterOutProcess,

    /// <remarks/>
    RouterReprocessInterchange,

    /// <remarks/>
    RouterAlternateDirectoryDateGet,

    /// <remarks/>
    RouterAlternateDirectoryDateSet,

    /// <remarks/>
    RouterInterchangeSuspended,

    /// <remarks/>
    RouterSyncToParcel,

    /// <remarks/>
    GatewayOutProcess,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum RetCode
{

    /// <remarks/>
    Unknown,

    /// <remarks/>
    Success,

    /// <remarks/>
    SessionTimeout,

    /// <remarks/>
    AccessDenied,

    /// <remarks/>
    NotFound,

    /// <remarks/>
    InvalidID,

    /// <remarks/>
    Duplicate,

    /// <remarks/>
    IDExistsOnNetwork,

    /// <remarks/>
    InvalidDataType,

    /// <remarks/>
    InvalidDataLength,

    /// <remarks/>
    DataError,

    /// <remarks/>
    SQLError,

    /// <remarks/>
    InternalError,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class SessionLogInfo
{

    private string sessionIDField;

    private System.DateTime startTimeField;

    private System.DateTime endTimeField;

    private System.DateTime expiresField;

    private int networkIDField;

    private int mailboxIDField;

    private int userIDField;

    private SessionStatus statusField;

    private string versionField;

    private SessionEvents[] eventsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string SessionID
    {
        get
        {
            return this.sessionIDField;
        }
        set
        {
            this.sessionIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime StartTime
    {
        get
        {
            return this.startTimeField;
        }
        set
        {
            this.startTimeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public System.DateTime EndTime
    {
        get
        {
            return this.endTimeField;
        }
        set
        {
            this.endTimeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Expires
    {
        get
        {
            return this.expiresField;
        }
        set
        {
            this.expiresField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public SessionStatus Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string Version
    {
        get
        {
            return this.versionField;
        }
        set
        {
            this.versionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 9)]
    public SessionEvents[] Events
    {
        get
        {
            return this.eventsField;
        }
        set
        {
            this.eventsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum SessionStatus
{

    /// <remarks/>
    Open,

    /// <remarks/>
    Closed,

    /// <remarks/>
    Expired,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class SessionInfo
{

    private string eCGridOSVersionField;

    private string sessionIDField;

    private int sessionEventIDField;

    private int userIDField;

    private string loginNameField;

    private string firstNameField;

    private string lastNameField;

    private string companyField;

    private string eMailField;

    private string phoneField;

    private float timeZoneOffsetField;

    private AuthLevel authLevelField;

    private System.DateTime lastLoginField;

    private short openSessionsField;

    private short timeOutField;

    private int networkIDField;

    private int mailboxIDField;

    private string ipField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string ECGridOSVersion
    {
        get
        {
            return this.eCGridOSVersionField;
        }
        set
        {
            this.eCGridOSVersionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string SessionID
    {
        get
        {
            return this.sessionIDField;
        }
        set
        {
            this.sessionIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int SessionEventID
    {
        get
        {
            return this.sessionEventIDField;
        }
        set
        {
            this.sessionEventIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string LoginName
    {
        get
        {
            return this.loginNameField;
        }
        set
        {
            this.loginNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string FirstName
    {
        get
        {
            return this.firstNameField;
        }
        set
        {
            this.firstNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string LastName
    {
        get
        {
            return this.lastNameField;
        }
        set
        {
            this.lastNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string Company
    {
        get
        {
            return this.companyField;
        }
        set
        {
            this.companyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string EMail
    {
        get
        {
            return this.eMailField;
        }
        set
        {
            this.eMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public string Phone
    {
        get
        {
            return this.phoneField;
        }
        set
        {
            this.phoneField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public float TimeZoneOffset
    {
        get
        {
            return this.timeZoneOffsetField;
        }
        set
        {
            this.timeZoneOffsetField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public AuthLevel AuthLevel
    {
        get
        {
            return this.authLevelField;
        }
        set
        {
            this.authLevelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public System.DateTime LastLogin
    {
        get
        {
            return this.lastLoginField;
        }
        set
        {
            this.lastLoginField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public short OpenSessions
    {
        get
        {
            return this.openSessionsField;
        }
        set
        {
            this.openSessionsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public short TimeOut
    {
        get
        {
            return this.timeOutField;
        }
        set
        {
            this.timeOutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public string ip
    {
        get
        {
            return this.ipField;
        }
        set
        {
            this.ipField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum AuthLevel
{

    /// <remarks/>
    NoChange,

    /// <remarks/>
    Root,

    /// <remarks/>
    TechOps,

    /// <remarks/>
    NetOps,

    /// <remarks/>
    NetworkAdmin,

    /// <remarks/>
    NetworkUser,

    /// <remarks/>
    MailboxAdmin,

    /// <remarks/>
    MailboxUser,

    /// <remarks/>
    TPUser,

    /// <remarks/>
    General,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class FileInfo
{

    private long parcelIDField;

    private string fileNameField;

    private System.DateTime fileDateField;

    private int bytesField;

    private EDIStandard standardField;

    private byte[] contentField;

    private string contentBase64StringField;

    private bool routerArchiveField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public long ParcelID
    {
        get
        {
            return this.parcelIDField;
        }
        set
        {
            this.parcelIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string FileName
    {
        get
        {
            return this.fileNameField;
        }
        set
        {
            this.fileNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public System.DateTime FileDate
    {
        get
        {
            return this.fileDateField;
        }
        set
        {
            this.fileDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int Bytes
    {
        get
        {
            return this.bytesField;
        }
        set
        {
            this.bytesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public EDIStandard Standard
    {
        get
        {
            return this.standardField;
        }
        set
        {
            this.standardField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 5)]
    public byte[] Content
    {
        get
        {
            return this.contentField;
        }
        set
        {
            this.contentField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string ContentBase64String
    {
        get
        {
            return this.contentBase64StringField;
        }
        set
        {
            this.contentBase64StringField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public bool routerArchive
    {
        get
        {
            return this.routerArchiveField;
        }
        set
        {
            this.routerArchiveField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum EDIStandard
{

    /// <remarks/>
    X12,

    /// <remarks/>
    EDIFACT,

    /// <remarks/>
    TRADACOMS,

    /// <remarks/>
    VDA,

    /// <remarks/>
    XML,

    /// <remarks/>
    TXT,

    /// <remarks/>
    PDF,

    /// <remarks/>
    Binary,

    /// <remarks/>
    PEPPOL,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CarbonCopyIDInfo
{

    private int carbonCopyIDField;

    private int networkIDField;

    private int mailboxIDField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private Status statusField;

    private ECGridIDInfo originalFromField;

    private ECGridIDInfo originalToField;

    private ECGridIDInfo cCFromField;

    private ECGridIDInfo cCToField;

    private string gSFromField;

    private string gSToField;

    private string transactionSetField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int CarbonCopyID
    {
        get
        {
            return this.carbonCopyIDField;
        }
        set
        {
            this.carbonCopyIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public ECGridIDInfo OriginalFrom
    {
        get
        {
            return this.originalFromField;
        }
        set
        {
            this.originalFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public ECGridIDInfo OriginalTo
    {
        get
        {
            return this.originalToField;
        }
        set
        {
            this.originalToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public ECGridIDInfo CCFrom
    {
        get
        {
            return this.cCFromField;
        }
        set
        {
            this.cCFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public ECGridIDInfo CCTo
    {
        get
        {
            return this.cCToField;
        }
        set
        {
            this.cCToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string GSFrom
    {
        get
        {
            return this.gSFromField;
        }
        set
        {
            this.gSFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public string GSTo
    {
        get
        {
            return this.gSToField;
        }
        set
        {
            this.gSToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public string TransactionSet
    {
        get
        {
            return this.transactionSetField;
        }
        set
        {
            this.transactionSetField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ECGridIDInfo
{

    private int eCGridIDField;

    private int networkIDField;

    private string networkNameField;

    private int mailboxIDField;

    private string mailboxNameField;

    private string qualifierField;

    private string idField;

    private string descriptionField;

    private string dataEMailField;

    private bool mailboxDefaultField;

    private StatusECGridID statusField;

    private UseType useTypeField;

    private UserIDInfo ownerField;

    private ECGridOwnerInfo ownerInfoField;

    private MailboxConfig configField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int ECGridID
    {
        get
        {
            return this.eCGridIDField;
        }
        set
        {
            this.eCGridIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string NetworkName
    {
        get
        {
            return this.networkNameField;
        }
        set
        {
            this.networkNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string MailboxName
    {
        get
        {
            return this.mailboxNameField;
        }
        set
        {
            this.mailboxNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string Qualifier
    {
        get
        {
            return this.qualifierField;
        }
        set
        {
            this.qualifierField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string ID
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string Description
    {
        get
        {
            return this.descriptionField;
        }
        set
        {
            this.descriptionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string DataEMail
    {
        get
        {
            return this.dataEMailField;
        }
        set
        {
            this.dataEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public bool MailboxDefault
    {
        get
        {
            return this.mailboxDefaultField;
        }
        set
        {
            this.mailboxDefaultField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public StatusECGridID Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public UseType UseType
    {
        get
        {
            return this.useTypeField;
        }
        set
        {
            this.useTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public UserIDInfo Owner
    {
        get
        {
            return this.ownerField;
        }
        set
        {
            this.ownerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public ECGridOwnerInfo OwnerInfo
    {
        get
        {
            return this.ownerInfoField;
        }
        set
        {
            this.ownerInfoField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public MailboxConfig Config
    {
        get
        {
            return this.configField;
        }
        set
        {
            this.configField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum StatusECGridID
{

    /// <remarks/>
    Active,

    /// <remarks/>
    AutoRoute,

    /// <remarks/>
    Pending,

    /// <remarks/>
    Suspended,

    /// <remarks/>
    Terminated,

    /// <remarks/>
    Duplicate,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum UseType
{

    /// <remarks/>
    Undefined,

    /// <remarks/>
    Test,

    /// <remarks/>
    Production,

    /// <remarks/>
    TestAndProduction,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class UserIDInfo
{

    private int userIDField;

    private string loginNameField;

    private string recoveryQuestionField;

    private string firstNameField;

    private string lastNameField;

    private string companyField;

    private string eMailField;

    private string phoneField;

    private string cellPhoneField;

    private CellCarrier cellCarrierField;

    private short timeZoneOffsetField;

    private int networkIDField;

    private int mailboxIDField;

    private AuthLevel authLevelField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private System.DateTime lastLoginField;

    private Status statusField;

    private bool lockedOutField;

    private short openSessionsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string LoginName
    {
        get
        {
            return this.loginNameField;
        }
        set
        {
            this.loginNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string RecoveryQuestion
    {
        get
        {
            return this.recoveryQuestionField;
        }
        set
        {
            this.recoveryQuestionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string FirstName
    {
        get
        {
            return this.firstNameField;
        }
        set
        {
            this.firstNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string LastName
    {
        get
        {
            return this.lastNameField;
        }
        set
        {
            this.lastNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string Company
    {
        get
        {
            return this.companyField;
        }
        set
        {
            this.companyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string EMail
    {
        get
        {
            return this.eMailField;
        }
        set
        {
            this.eMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string Phone
    {
        get
        {
            return this.phoneField;
        }
        set
        {
            this.phoneField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string CellPhone
    {
        get
        {
            return this.cellPhoneField;
        }
        set
        {
            this.cellPhoneField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public CellCarrier CellCarrier
    {
        get
        {
            return this.cellCarrierField;
        }
        set
        {
            this.cellCarrierField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public short TimeZoneOffset
    {
        get
        {
            return this.timeZoneOffsetField;
        }
        set
        {
            this.timeZoneOffsetField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public AuthLevel AuthLevel
    {
        get
        {
            return this.authLevelField;
        }
        set
        {
            this.authLevelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public System.DateTime LastLogin
    {
        get
        {
            return this.lastLoginField;
        }
        set
        {
            this.lastLoginField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public bool LockedOut
    {
        get
        {
            return this.lockedOutField;
        }
        set
        {
            this.lockedOutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public short OpenSessions
    {
        get
        {
            return this.openSessionsField;
        }
        set
        {
            this.openSessionsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum CellCarrier
{

    /// <remarks/>
    NoChange,

    /// <remarks/>
    Undefined,

    /// <remarks/>
    ATTCingular,

    /// <remarks/>
    Verizon,

    /// <remarks/>
    TMobile,

    /// <remarks/>
    SprintPCS,

    /// <remarks/>
    Nextel,

    /// <remarks/>
    Alltel,

    /// <remarks/>
    VirginMobile,

    /// <remarks/>
    ATTPreCingular,

    /// <remarks/>
    ATT,

    /// <remarks/>
    BoostMobile,

    /// <remarks/>
    USCellular,

    /// <remarks/>
    MetroPCS,

    /// <remarks/>
    Powertel,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ECGridOwnerInfo
{

    private int networkIDField;

    private string networkNameField;

    private int mailboxIDField;

    private string mailboxNameField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private System.DateTime effectiveField;

    private System.DateTime expiresField;

    private System.DateTime lastTrafficField;

    private RoutingGroup routingGroupField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string NetworkName
    {
        get
        {
            return this.networkNameField;
        }
        set
        {
            this.networkNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string MailboxName
    {
        get
        {
            return this.mailboxNameField;
        }
        set
        {
            this.mailboxNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public System.DateTime Effective
    {
        get
        {
            return this.effectiveField;
        }
        set
        {
            this.effectiveField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public System.DateTime Expires
    {
        get
        {
            return this.expiresField;
        }
        set
        {
            this.expiresField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public System.DateTime LastTraffic
    {
        get
        {
            return this.lastTrafficField;
        }
        set
        {
            this.lastTrafficField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public RoutingGroup RoutingGroup
    {
        get
        {
            return this.routingGroupField;
        }
        set
        {
            this.routingGroupField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum RoutingGroup
{

    /// <remarks/>
    ProductionA,

    /// <remarks/>
    ProductionB,

    /// <remarks/>
    Migration1,

    /// <remarks/>
    Migration2,

    /// <remarks/>
    NetOpsOnly1,

    /// <remarks/>
    NetOpsOnly2,

    /// <remarks/>
    ManagedFileTransfer,

    /// <remarks/>
    SuperHub,

    /// <remarks/>
    Test,

    /// <remarks/>
    Suspense1,

    /// <remarks/>
    Suspense2,

    /// <remarks/>
    Suspense3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MailboxConfig
{

    private short inBoxTimeoutField;

    private byte segTermField;

    private byte elmSepField;

    private byte subElmSepField;

    private short eBCDICFilterField;

    private bool fTPasciiFilterField;

    private bool lowPassFilterField;

    private bool mailbagPassThroughField;

    private bool deleteOnDownloadField;

    private bool stripDirectedEnvelopeField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public short InBoxTimeout
    {
        get
        {
            return this.inBoxTimeoutField;
        }
        set
        {
            this.inBoxTimeoutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public byte SegTerm
    {
        get
        {
            return this.segTermField;
        }
        set
        {
            this.segTermField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public byte ElmSep
    {
        get
        {
            return this.elmSepField;
        }
        set
        {
            this.elmSepField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public byte SubElmSep
    {
        get
        {
            return this.subElmSepField;
        }
        set
        {
            this.subElmSepField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public short EBCDICFilter
    {
        get
        {
            return this.eBCDICFilterField;
        }
        set
        {
            this.eBCDICFilterField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public bool FTPasciiFilter
    {
        get
        {
            return this.fTPasciiFilterField;
        }
        set
        {
            this.fTPasciiFilterField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public bool LowPassFilter
    {
        get
        {
            return this.lowPassFilterField;
        }
        set
        {
            this.lowPassFilterField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public bool MailbagPassThrough
    {
        get
        {
            return this.mailbagPassThroughField;
        }
        set
        {
            this.mailbagPassThroughField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public bool DeleteOnDownload
    {
        get
        {
            return this.deleteOnDownloadField;
        }
        set
        {
            this.deleteOnDownloadField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public bool StripDirectedEnvelope
    {
        get
        {
            return this.stripDirectedEnvelopeField;
        }
        set
        {
            this.stripDirectedEnvelopeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MigrationNote
{

    private int migrationNoteIDField;

    private System.DateTime noteDateField;

    private StatusInterconnect statusField;

    private int userIDField;

    private string mailToField;

    private string noteField;

    private NoteAttachment attachmentField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int MigrationNoteID
    {
        get
        {
            return this.migrationNoteIDField;
        }
        set
        {
            this.migrationNoteIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime NoteDate
    {
        get
        {
            return this.noteDateField;
        }
        set
        {
            this.noteDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public StatusInterconnect Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string MailTo
    {
        get
        {
            return this.mailToField;
        }
        set
        {
            this.mailToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string Note
    {
        get
        {
            return this.noteField;
        }
        set
        {
            this.noteField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public NoteAttachment Attachment
    {
        get
        {
            return this.attachmentField;
        }
        set
        {
            this.attachmentField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum StatusInterconnect
{

    /// <remarks/>
    Pending,

    /// <remarks/>
    Completed,

    /// <remarks/>
    Canceled,

    /// <remarks/>
    Delayed,

    /// <remarks/>
    Problem,

    /// <remarks/>
    AuthorizationRequired,

    /// <remarks/>
    NoStatusChange,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NoteAttachment
{

    private string fileNameField;

    private byte[] contentField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string FileName
    {
        get
        {
            return this.fileNameField;
        }
        set
        {
            this.fileNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 1)]
    public byte[] Content
    {
        get
        {
            return this.contentField;
        }
        set
        {
            this.contentField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MigrationTP
{

    private ECGridIDInfo eCGridIDField;

    private MigrationType typeField;

    private MigrationTPStatus statusField;

    private ECGridIDInfo[] tPsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public ECGridIDInfo ECGridID
    {
        get
        {
            return this.eCGridIDField;
        }
        set
        {
            this.eCGridIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public MigrationType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public MigrationTPStatus Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 3)]
    public ECGridIDInfo[] TPs
    {
        get
        {
            return this.tPsField;
        }
        set
        {
            this.tPsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum MigrationType
{

    /// <remarks/>
    Expected,

    /// <remarks/>
    Unexpected,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum MigrationTPStatus
{

    /// <remarks/>
    Pending,

    /// <remarks/>
    Inbound,

    /// <remarks/>
    Outbound,

    /// <remarks/>
    Complete,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MigrationBatch
{

    private int migrationBatchIdField;

    private string nameField;

    private System.DateTime scheduledField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private System.DateTime contactedField;

    private System.DateTime respondedField;

    private System.DateTime confirmedField;

    private int totalField;

    private int completeField;

    private int inboundField;

    private int outboundField;

    private MigrationStatus statusField;

    private MigrationTP[] tPsField;

    private MigrationNote[] notesField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int MigrationBatchId
    {
        get
        {
            return this.migrationBatchIdField;
        }
        set
        {
            this.migrationBatchIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public System.DateTime Scheduled
    {
        get
        {
            return this.scheduledField;
        }
        set
        {
            this.scheduledField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public System.DateTime Contacted
    {
        get
        {
            return this.contactedField;
        }
        set
        {
            this.contactedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public System.DateTime Responded
    {
        get
        {
            return this.respondedField;
        }
        set
        {
            this.respondedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public System.DateTime Confirmed
    {
        get
        {
            return this.confirmedField;
        }
        set
        {
            this.confirmedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public int Total
    {
        get
        {
            return this.totalField;
        }
        set
        {
            this.totalField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public int Complete
    {
        get
        {
            return this.completeField;
        }
        set
        {
            this.completeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public int Inbound
    {
        get
        {
            return this.inboundField;
        }
        set
        {
            this.inboundField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public int Outbound
    {
        get
        {
            return this.outboundField;
        }
        set
        {
            this.outboundField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public MigrationStatus Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 13)]
    public MigrationTP[] TPs
    {
        get
        {
            return this.tPsField;
        }
        set
        {
            this.tPsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 14)]
    public MigrationNote[] Notes
    {
        get
        {
            return this.notesField;
        }
        set
        {
            this.notesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum MigrationStatus
{

    /// <remarks/>
    All,

    /// <remarks/>
    Canceled,

    /// <remarks/>
    Planned,

    /// <remarks/>
    Requested,

    /// <remarks/>
    Confirmed,

    /// <remarks/>
    Active,

    /// <remarks/>
    Completed,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkFTPInfo
{

    private string[] ipField;

    private string userIDField;

    private string passwordField;

    private string accountField;

    private string virtualDirectoryInField;

    private string virtualDirectoryOutField;

    private string logicalDirectoryField;

    private short maxThreadsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 0)]
    public string[] IP
    {
        get
        {
            return this.ipField;
        }
        set
        {
            this.ipField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Password
    {
        get
        {
            return this.passwordField;
        }
        set
        {
            this.passwordField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string Account
    {
        get
        {
            return this.accountField;
        }
        set
        {
            this.accountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string VirtualDirectoryIn
    {
        get
        {
            return this.virtualDirectoryInField;
        }
        set
        {
            this.virtualDirectoryInField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string VirtualDirectoryOut
    {
        get
        {
            return this.virtualDirectoryOutField;
        }
        set
        {
            this.virtualDirectoryOutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string LogicalDirectory
    {
        get
        {
            return this.logicalDirectoryField;
        }
        set
        {
            this.logicalDirectoryField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public short MaxThreads
    {
        get
        {
            return this.maxThreadsField;
        }
        set
        {
            this.maxThreadsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkVPN
{

    private string localTunnelField;

    private string remoteTunnelField;

    private string[] encryptionDomainField;

    private string sharedSecretField;

    private NetworkVPNEncryptionMethod encryptionMethodField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string LocalTunnel
    {
        get
        {
            return this.localTunnelField;
        }
        set
        {
            this.localTunnelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string RemoteTunnel
    {
        get
        {
            return this.remoteTunnelField;
        }
        set
        {
            this.remoteTunnelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 2)]
    public string[] EncryptionDomain
    {
        get
        {
            return this.encryptionDomainField;
        }
        set
        {
            this.encryptionDomainField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string SharedSecret
    {
        get
        {
            return this.sharedSecretField;
        }
        set
        {
            this.sharedSecretField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public NetworkVPNEncryptionMethod EncryptionMethod
    {
        get
        {
            return this.encryptionMethodField;
        }
        set
        {
            this.encryptionMethodField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkVPNEncryptionMethod
{

    /// <remarks/>
    _3DES_SHA1,

    /// <remarks/>
    _DES_SHA1,

    /// <remarks/>
    _3DES_MD5,

    /// <remarks/>
    _DES_MD5,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkGateway
{

    private string applicationField;

    private short applicationTimeOutField;

    private string applicationLogFileField;

    private short frequencyField;

    private short minimumPollingField;

    private NetworkGatewayHandshake handshakeField;

    private NetworkGatewayCommChannel commChannelField;

    private NetworkGatewayConnection connectionField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string Application
    {
        get
        {
            return this.applicationField;
        }
        set
        {
            this.applicationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public short ApplicationTimeOut
    {
        get
        {
            return this.applicationTimeOutField;
        }
        set
        {
            this.applicationTimeOutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string ApplicationLogFile
    {
        get
        {
            return this.applicationLogFileField;
        }
        set
        {
            this.applicationLogFileField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public short Frequency
    {
        get
        {
            return this.frequencyField;
        }
        set
        {
            this.frequencyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public short MinimumPolling
    {
        get
        {
            return this.minimumPollingField;
        }
        set
        {
            this.minimumPollingField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public NetworkGatewayHandshake Handshake
    {
        get
        {
            return this.handshakeField;
        }
        set
        {
            this.handshakeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public NetworkGatewayCommChannel CommChannel
    {
        get
        {
            return this.commChannelField;
        }
        set
        {
            this.commChannelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public NetworkGatewayConnection Connection
    {
        get
        {
            return this.connectionField;
        }
        set
        {
            this.connectionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkGatewayHandshake
{

    /// <remarks/>
    Push,

    /// <remarks/>
    Pull,

    /// <remarks/>
    PushPull,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkGatewayCommChannel
{

    /// <remarks/>
    none,

    /// <remarks/>
    ftp,

    /// <remarks/>
    sftp,

    /// <remarks/>
    as2,

    /// <remarks/>
    http,

    /// <remarks/>
    oftp,

    /// <remarks/>
    x400,

    /// <remarks/>
    gisb,

    /// <remarks/>
    rnif,

    /// <remarks/>
    cxml,

    /// <remarks/>
    undefined,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkGatewayConnection
{

    /// <remarks/>
    Internet,

    /// <remarks/>
    VPN,

    /// <remarks/>
    Dial,

    /// <remarks/>
    Other,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class x1256mailbag
{

    private string passwordFromField;

    private string passwordToField;

    private string qualifierFromField;

    private string idFromField;

    private string qualifierToField;

    private string idToField;

    private string versionField;

    private bool productionField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string passwordFrom
    {
        get
        {
            return this.passwordFromField;
        }
        set
        {
            this.passwordFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string passwordTo
    {
        get
        {
            return this.passwordToField;
        }
        set
        {
            this.passwordToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string qualifierFrom
    {
        get
        {
            return this.qualifierFromField;
        }
        set
        {
            this.qualifierFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string idFrom
    {
        get
        {
            return this.idFromField;
        }
        set
        {
            this.idFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string qualifierTo
    {
        get
        {
            return this.qualifierToField;
        }
        set
        {
            this.qualifierToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string idTo
    {
        get
        {
            return this.idToField;
        }
        set
        {
            this.idToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string version
    {
        get
        {
            return this.versionField;
        }
        set
        {
            this.versionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public bool production
    {
        get
        {
            return this.productionField;
        }
        set
        {
            this.productionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkNetOpsInfo
{

    private int billingUserIDField;

    private string billingContactField;

    private string billingEMailField;

    private short billingTypeField;

    private string invoiceContactField;

    private string invoiceEMailField;

    private string softwareVersionField;

    private System.DateTime createdField;

    private System.DateTime commissionedField;

    private System.DateTime decommissionedField;

    private System.DateTime modifiedField;

    private string runDirField;

    private string internalDirectoryField;

    private string externalDirectoryRootField;

    private string externalDirectoryInField;

    private string externalDirectoryOutField;

    private short archiveDaysField;

    private string supportURLField;

    private short blockSizeField;

    private short envPerMBField;

    private short outBoxTimeOutField;

    private string masterAccountField;

    private int processIDField;

    private string userNameField;

    private string userDomainField;

    private string serverField;

    private int aliasNetworkIDField;

    private int aliasMailboxIDField;

    private string inBoxPatternField;

    private string outBoxPatternField;

    private x1256mailbag x1256Field;

    private short archiveDaysInternalField;

    private short archiveDaysExternalField;

    private short maxBatchField;

    private short dbOpenMaxCyclesField;

    private short dbOpenMaxSecondsField;

    private NetworkGateway gatewayField;

    private NetworkVPN vPNField;

    private NetworkFTPInfo fTPServerField;

    private NetworkFTPInfo fTPClientField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int BillingUserID
    {
        get
        {
            return this.billingUserIDField;
        }
        set
        {
            this.billingUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string BillingContact
    {
        get
        {
            return this.billingContactField;
        }
        set
        {
            this.billingContactField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string BillingEMail
    {
        get
        {
            return this.billingEMailField;
        }
        set
        {
            this.billingEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public short BillingType
    {
        get
        {
            return this.billingTypeField;
        }
        set
        {
            this.billingTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string InvoiceContact
    {
        get
        {
            return this.invoiceContactField;
        }
        set
        {
            this.invoiceContactField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string InvoiceEMail
    {
        get
        {
            return this.invoiceEMailField;
        }
        set
        {
            this.invoiceEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string SoftwareVersion
    {
        get
        {
            return this.softwareVersionField;
        }
        set
        {
            this.softwareVersionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public System.DateTime Commissioned
    {
        get
        {
            return this.commissionedField;
        }
        set
        {
            this.commissionedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public System.DateTime Decommissioned
    {
        get
        {
            return this.decommissionedField;
        }
        set
        {
            this.decommissionedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public string RunDir
    {
        get
        {
            return this.runDirField;
        }
        set
        {
            this.runDirField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public string InternalDirectory
    {
        get
        {
            return this.internalDirectoryField;
        }
        set
        {
            this.internalDirectoryField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public string ExternalDirectoryRoot
    {
        get
        {
            return this.externalDirectoryRootField;
        }
        set
        {
            this.externalDirectoryRootField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public string ExternalDirectoryIn
    {
        get
        {
            return this.externalDirectoryInField;
        }
        set
        {
            this.externalDirectoryInField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public string ExternalDirectoryOut
    {
        get
        {
            return this.externalDirectoryOutField;
        }
        set
        {
            this.externalDirectoryOutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public short ArchiveDays
    {
        get
        {
            return this.archiveDaysField;
        }
        set
        {
            this.archiveDaysField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public string SupportURL
    {
        get
        {
            return this.supportURLField;
        }
        set
        {
            this.supportURLField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public short BlockSize
    {
        get
        {
            return this.blockSizeField;
        }
        set
        {
            this.blockSizeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public short EnvPerMB
    {
        get
        {
            return this.envPerMBField;
        }
        set
        {
            this.envPerMBField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public short OutBoxTimeOut
    {
        get
        {
            return this.outBoxTimeOutField;
        }
        set
        {
            this.outBoxTimeOutField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
    public string MasterAccount
    {
        get
        {
            return this.masterAccountField;
        }
        set
        {
            this.masterAccountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 22)]
    public int ProcessID
    {
        get
        {
            return this.processIDField;
        }
        set
        {
            this.processIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 23)]
    public string UserName
    {
        get
        {
            return this.userNameField;
        }
        set
        {
            this.userNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 24)]
    public string UserDomain
    {
        get
        {
            return this.userDomainField;
        }
        set
        {
            this.userDomainField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 25)]
    public string Server
    {
        get
        {
            return this.serverField;
        }
        set
        {
            this.serverField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 26)]
    public int AliasNetworkID
    {
        get
        {
            return this.aliasNetworkIDField;
        }
        set
        {
            this.aliasNetworkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 27)]
    public int AliasMailboxID
    {
        get
        {
            return this.aliasMailboxIDField;
        }
        set
        {
            this.aliasMailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 28)]
    public string InBoxPattern
    {
        get
        {
            return this.inBoxPatternField;
        }
        set
        {
            this.inBoxPatternField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 29)]
    public string OutBoxPattern
    {
        get
        {
            return this.outBoxPatternField;
        }
        set
        {
            this.outBoxPatternField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 30)]
    public x1256mailbag x1256
    {
        get
        {
            return this.x1256Field;
        }
        set
        {
            this.x1256Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 31)]
    public short ArchiveDaysInternal
    {
        get
        {
            return this.archiveDaysInternalField;
        }
        set
        {
            this.archiveDaysInternalField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 32)]
    public short ArchiveDaysExternal
    {
        get
        {
            return this.archiveDaysExternalField;
        }
        set
        {
            this.archiveDaysExternalField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 33)]
    public short MaxBatch
    {
        get
        {
            return this.maxBatchField;
        }
        set
        {
            this.maxBatchField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 34)]
    public short dbOpenMaxCycles
    {
        get
        {
            return this.dbOpenMaxCyclesField;
        }
        set
        {
            this.dbOpenMaxCyclesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 35)]
    public short dbOpenMaxSeconds
    {
        get
        {
            return this.dbOpenMaxSecondsField;
        }
        set
        {
            this.dbOpenMaxSecondsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 36)]
    public NetworkGateway Gateway
    {
        get
        {
            return this.gatewayField;
        }
        set
        {
            this.gatewayField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 37)]
    public NetworkVPN VPN
    {
        get
        {
            return this.vPNField;
        }
        set
        {
            this.vPNField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 38)]
    public NetworkFTPInfo FTPServer
    {
        get
        {
            return this.fTPServerField;
        }
        set
        {
            this.fTPServerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 39)]
    public NetworkFTPInfo FTPClient
    {
        get
        {
            return this.fTPClientField;
        }
        set
        {
            this.fTPClientField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkOwnerInfo
{

    private string typeField;

    private string routingTypeField;

    private NetworkRoutingType routingField;

    private string legacyPasswordField;

    private string interconnectContactField;

    private string interconnectEMailField;

    private string errorContactField;

    private string errorEMailField;

    private MailboxConfig configField;

    private int pricelistIDField;

    private int contractIDField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string RoutingType
    {
        get
        {
            return this.routingTypeField;
        }
        set
        {
            this.routingTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public NetworkRoutingType Routing
    {
        get
        {
            return this.routingField;
        }
        set
        {
            this.routingField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string LegacyPassword
    {
        get
        {
            return this.legacyPasswordField;
        }
        set
        {
            this.legacyPasswordField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string InterconnectContact
    {
        get
        {
            return this.interconnectContactField;
        }
        set
        {
            this.interconnectContactField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string InterconnectEMail
    {
        get
        {
            return this.interconnectEMailField;
        }
        set
        {
            this.interconnectEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string ErrorContact
    {
        get
        {
            return this.errorContactField;
        }
        set
        {
            this.errorContactField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string ErrorEMail
    {
        get
        {
            return this.errorEMailField;
        }
        set
        {
            this.errorEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public MailboxConfig Config
    {
        get
        {
            return this.configField;
        }
        set
        {
            this.configField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public int PricelistID
    {
        get
        {
            return this.pricelistIDField;
        }
        set
        {
            this.pricelistIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public int ContractID
    {
        get
        {
            return this.contractIDField;
        }
        set
        {
            this.contractIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkRoutingType
{

    /// <remarks/>
    Open,

    /// <remarks/>
    OpenWithSenderValidation,

    /// <remarks/>
    TradingPartnerPairs,

    /// <remarks/>
    MultiNetwork,

    /// <remarks/>
    ECGridOpen,

    /// <remarks/>
    ECGridTradingPartnerPairs,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkLog
{

    private int logIDField;

    private System.DateTime logDateField;

    private int userIDField;

    private NetworkLogType typeField;

    private NetworkLogStatus statusField;

    private AuthLevel authLevelField;

    private string descriptionField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int LogID
    {
        get
        {
            return this.logIDField;
        }
        set
        {
            this.logIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime LogDate
    {
        get
        {
            return this.logDateField;
        }
        set
        {
            this.logDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public NetworkLogType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public NetworkLogStatus Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public AuthLevel AuthLevel
    {
        get
        {
            return this.authLevelField;
        }
        set
        {
            this.authLevelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string Description
    {
        get
        {
            return this.descriptionField;
        }
        set
        {
            this.descriptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkLogType
{

    /// <remarks/>
    SystemResponse,

    /// <remarks/>
    SystemAutomated,

    /// <remarks/>
    User,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkLogStatus
{

    /// <remarks/>
    Start,

    /// <remarks/>
    CheckIn,

    /// <remarks/>
    Access,

    /// <remarks/>
    Pause,

    /// <remarks/>
    Restart,

    /// <remarks/>
    Shutdown,

    /// <remarks/>
    StatusChange,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class NetworkIDInfo
{

    private int networkIDField;

    private string nameField;

    private string locationField;

    private string adminContactField;

    private string adminPhoneField;

    private string adminEMailField;

    private System.DateTime lastContactField;

    private NetworkType typeField;

    private Status statusField;

    private NetworkRunStatus runStatusField;

    private NetworkStatus networkStatusField;

    private bool eCGridAccountField;

    private int ownerUserIDField;

    private int routingUserIDField;

    private int errorsUserIDField;

    private int interconnectsUserIDField;

    private int noticesUserIDField;

    private int reportsUserIDField;

    private int accountingUserIDField;

    private int customerServiceUserIDField;

    private string homeWebsiteField;

    private string supportWebsiteField;

    private string loginWebsiteField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private NetworkLog lastLogField;

    private NetworkOwnerInfo ownerInfoField;

    private NetworkNetOpsInfo netOpsInfoField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Location
    {
        get
        {
            return this.locationField;
        }
        set
        {
            this.locationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string AdminContact
    {
        get
        {
            return this.adminContactField;
        }
        set
        {
            this.adminContactField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string AdminPhone
    {
        get
        {
            return this.adminPhoneField;
        }
        set
        {
            this.adminPhoneField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string AdminEMail
    {
        get
        {
            return this.adminEMailField;
        }
        set
        {
            this.adminEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public System.DateTime LastContact
    {
        get
        {
            return this.lastContactField;
        }
        set
        {
            this.lastContactField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public NetworkType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public NetworkRunStatus RunStatus
    {
        get
        {
            return this.runStatusField;
        }
        set
        {
            this.runStatusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public NetworkStatus NetworkStatus
    {
        get
        {
            return this.networkStatusField;
        }
        set
        {
            this.networkStatusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public bool ECGridAccount
    {
        get
        {
            return this.eCGridAccountField;
        }
        set
        {
            this.eCGridAccountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public int OwnerUserID
    {
        get
        {
            return this.ownerUserIDField;
        }
        set
        {
            this.ownerUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public int RoutingUserID
    {
        get
        {
            return this.routingUserIDField;
        }
        set
        {
            this.routingUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public int ErrorsUserID
    {
        get
        {
            return this.errorsUserIDField;
        }
        set
        {
            this.errorsUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public int InterconnectsUserID
    {
        get
        {
            return this.interconnectsUserIDField;
        }
        set
        {
            this.interconnectsUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public int NoticesUserID
    {
        get
        {
            return this.noticesUserIDField;
        }
        set
        {
            this.noticesUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public int ReportsUserID
    {
        get
        {
            return this.reportsUserIDField;
        }
        set
        {
            this.reportsUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public int AccountingUserID
    {
        get
        {
            return this.accountingUserIDField;
        }
        set
        {
            this.accountingUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public int CustomerServiceUserID
    {
        get
        {
            return this.customerServiceUserIDField;
        }
        set
        {
            this.customerServiceUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public string HomeWebsite
    {
        get
        {
            return this.homeWebsiteField;
        }
        set
        {
            this.homeWebsiteField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
    public string SupportWebsite
    {
        get
        {
            return this.supportWebsiteField;
        }
        set
        {
            this.supportWebsiteField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 22)]
    public string LoginWebsite
    {
        get
        {
            return this.loginWebsiteField;
        }
        set
        {
            this.loginWebsiteField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 23)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 24)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 25)]
    public NetworkLog LastLog
    {
        get
        {
            return this.lastLogField;
        }
        set
        {
            this.lastLogField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 26)]
    public NetworkOwnerInfo OwnerInfo
    {
        get
        {
            return this.ownerInfoField;
        }
        set
        {
            this.ownerInfoField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 27)]
    public NetworkNetOpsInfo NetOpsInfo
    {
        get
        {
            return this.netOpsInfoField;
        }
        set
        {
            this.netOpsInfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkType
{

    /// <remarks/>
    Network,

    /// <remarks/>
    Router,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkRunStatus
{

    /// <remarks/>
    Restart,

    /// <remarks/>
    OffLine,

    /// <remarks/>
    Active,

    /// <remarks/>
    Sleeping,

    /// <remarks/>
    Alert,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkStatus
{

    /// <remarks/>
    Redirected,

    /// <remarks/>
    NormalOperation,

    /// <remarks/>
    ECGridScheduledOutage,

    /// <remarks/>
    ECGridUnscheduledOutage,

    /// <remarks/>
    NetworkScheduledOutage,

    /// <remarks/>
    NetworkUnscheduledOutage,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MigrationIDInfo
{

    private int migrationIDField;

    private string nameField;

    private NetworkIDInfo networkField;

    private MailboxIDInfo mailboxField;

    private NetworkIDInfo eCSPNetworkField;

    private MailboxIDInfo eCSPMailboxField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private MigrationStatus statusField;

    private UserIDInfo ownerField;

    private string helpTicketField;

    private MigrationBatch[] batchesField;

    private MigrationNote[] notesField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int MigrationID
    {
        get
        {
            return this.migrationIDField;
        }
        set
        {
            this.migrationIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public NetworkIDInfo Network
    {
        get
        {
            return this.networkField;
        }
        set
        {
            this.networkField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public MailboxIDInfo Mailbox
    {
        get
        {
            return this.mailboxField;
        }
        set
        {
            this.mailboxField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public NetworkIDInfo ECSPNetwork
    {
        get
        {
            return this.eCSPNetworkField;
        }
        set
        {
            this.eCSPNetworkField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public MailboxIDInfo ECSPMailbox
    {
        get
        {
            return this.eCSPMailboxField;
        }
        set
        {
            this.eCSPMailboxField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public MigrationStatus Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public UserIDInfo Owner
    {
        get
        {
            return this.ownerField;
        }
        set
        {
            this.ownerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string HelpTicket
    {
        get
        {
            return this.helpTicketField;
        }
        set
        {
            this.helpTicketField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 11)]
    public MigrationBatch[] Batches
    {
        get
        {
            return this.batchesField;
        }
        set
        {
            this.batchesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 12)]
    public MigrationNote[] Notes
    {
        get
        {
            return this.notesField;
        }
        set
        {
            this.notesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MailboxIDInfo
{

    private int mailboxIDField;

    private int networkIDField;

    private string nameField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private Status statusField;

    private string descriptionField;

    private UserIDInfo ownerUserIDField;

    private UserIDInfo errorsUserIDField;

    private UserIDInfo interconnectsUserIDField;

    private UserIDInfo noticesUserIDField;

    private UserIDInfo reportsUserIDField;

    private UserIDInfo customerServiceUserIDField;

    private UserIDInfo accountingUserIDField;

    private bool managedField;

    private UseType useTypeField;

    private MailboxConfig configField;

    private bool eCGridAccountField;

    private string defaultAS2IDField;

    private MailboxOwnerInfo ownerInfoField;

    private MailboxNetOpsInfo netOpsInfoField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string Description
    {
        get
        {
            return this.descriptionField;
        }
        set
        {
            this.descriptionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public UserIDInfo OwnerUserID
    {
        get
        {
            return this.ownerUserIDField;
        }
        set
        {
            this.ownerUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public UserIDInfo ErrorsUserID
    {
        get
        {
            return this.errorsUserIDField;
        }
        set
        {
            this.errorsUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public UserIDInfo InterconnectsUserID
    {
        get
        {
            return this.interconnectsUserIDField;
        }
        set
        {
            this.interconnectsUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public UserIDInfo NoticesUserID
    {
        get
        {
            return this.noticesUserIDField;
        }
        set
        {
            this.noticesUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public UserIDInfo ReportsUserID
    {
        get
        {
            return this.reportsUserIDField;
        }
        set
        {
            this.reportsUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public UserIDInfo CustomerServiceUserID
    {
        get
        {
            return this.customerServiceUserIDField;
        }
        set
        {
            this.customerServiceUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public UserIDInfo AccountingUserID
    {
        get
        {
            return this.accountingUserIDField;
        }
        set
        {
            this.accountingUserIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public bool Managed
    {
        get
        {
            return this.managedField;
        }
        set
        {
            this.managedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public UseType UseType
    {
        get
        {
            return this.useTypeField;
        }
        set
        {
            this.useTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public MailboxConfig Config
    {
        get
        {
            return this.configField;
        }
        set
        {
            this.configField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public bool ECGridAccount
    {
        get
        {
            return this.eCGridAccountField;
        }
        set
        {
            this.eCGridAccountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public string DefaultAS2ID
    {
        get
        {
            return this.defaultAS2IDField;
        }
        set
        {
            this.defaultAS2IDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public MailboxOwnerInfo OwnerInfo
    {
        get
        {
            return this.ownerInfoField;
        }
        set
        {
            this.ownerInfoField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public MailboxNetOpsInfo NetOpsInfo
    {
        get
        {
            return this.netOpsInfoField;
        }
        set
        {
            this.netOpsInfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MailboxOwnerInfo
{

    private int pricelistIDField;

    private int contractIDField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int PricelistID
    {
        get
        {
            return this.pricelistIDField;
        }
        set
        {
            this.pricelistIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int ContractID
    {
        get
        {
            return this.contractIDField;
        }
        set
        {
            this.contractIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class MailboxNetOpsInfo
{

    private int aliasNetworkIDField;

    private int aliasMailboxIDField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int AliasNetworkID
    {
        get
        {
            return this.aliasNetworkIDField;
        }
        set
        {
            this.aliasNetworkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int AliasMailboxID
    {
        get
        {
            return this.aliasMailboxIDField;
        }
        set
        {
            this.aliasMailboxIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class InterconnectNote
{

    private int interconnectIDField;

    private int interconnectNoteIDField;

    private System.DateTime noteDateField;

    private StatusInterconnect statusField;

    private string postedByField;

    private int userIDField;

    private string mailToField;

    private string noteField;

    private NoteAttachment attachmentField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int InterconnectID
    {
        get
        {
            return this.interconnectIDField;
        }
        set
        {
            this.interconnectIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int InterconnectNoteID
    {
        get
        {
            return this.interconnectNoteIDField;
        }
        set
        {
            this.interconnectNoteIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public System.DateTime NoteDate
    {
        get
        {
            return this.noteDateField;
        }
        set
        {
            this.noteDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public StatusInterconnect Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string PostedBy
    {
        get
        {
            return this.postedByField;
        }
        set
        {
            this.postedByField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string MailTo
    {
        get
        {
            return this.mailToField;
        }
        set
        {
            this.mailToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string Note
    {
        get
        {
            return this.noteField;
        }
        set
        {
            this.noteField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public NoteAttachment Attachment
    {
        get
        {
            return this.attachmentField;
        }
        set
        {
            this.attachmentField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class InterconnectIDInfo
{

    private int interconnectIDField;

    private string uniqueIDField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private System.DateTime completedField;

    private System.DateTime lastTrafficField;

    private System.DateTime lastTrafficInboundField;

    private System.DateTime lastTrafficOutboundField;

    private UserIDInfo requestorUserField;

    private UserIDInfo contactUserField;

    private string contactNameField;

    private string contactEMailField;

    private StatusInterconnect statusField;

    private bool suspendPendingInterchangesField;

    private ECGridIDInfo tP1Field;

    private string aS2ID1Field;

    private string reference1Field;

    private ECGridIDInfo tP2Field;

    private string aS2ID2Field;

    private string reference2Field;

    private UserIDInfo netOpsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int InterconnectID
    {
        get
        {
            return this.interconnectIDField;
        }
        set
        {
            this.interconnectIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string UniqueID
    {
        get
        {
            return this.uniqueIDField;
        }
        set
        {
            this.uniqueIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Completed
    {
        get
        {
            return this.completedField;
        }
        set
        {
            this.completedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public System.DateTime LastTraffic
    {
        get
        {
            return this.lastTrafficField;
        }
        set
        {
            this.lastTrafficField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public System.DateTime LastTrafficInbound
    {
        get
        {
            return this.lastTrafficInboundField;
        }
        set
        {
            this.lastTrafficInboundField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public System.DateTime LastTrafficOutbound
    {
        get
        {
            return this.lastTrafficOutboundField;
        }
        set
        {
            this.lastTrafficOutboundField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public UserIDInfo RequestorUser
    {
        get
        {
            return this.requestorUserField;
        }
        set
        {
            this.requestorUserField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public UserIDInfo ContactUser
    {
        get
        {
            return this.contactUserField;
        }
        set
        {
            this.contactUserField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string ContactName
    {
        get
        {
            return this.contactNameField;
        }
        set
        {
            this.contactNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public string ContactEMail
    {
        get
        {
            return this.contactEMailField;
        }
        set
        {
            this.contactEMailField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public StatusInterconnect Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public bool SuspendPendingInterchanges
    {
        get
        {
            return this.suspendPendingInterchangesField;
        }
        set
        {
            this.suspendPendingInterchangesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public ECGridIDInfo TP1
    {
        get
        {
            return this.tP1Field;
        }
        set
        {
            this.tP1Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public string AS2ID1
    {
        get
        {
            return this.aS2ID1Field;
        }
        set
        {
            this.aS2ID1Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public string Reference1
    {
        get
        {
            return this.reference1Field;
        }
        set
        {
            this.reference1Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public ECGridIDInfo TP2
    {
        get
        {
            return this.tP2Field;
        }
        set
        {
            this.tP2Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public string AS2ID2
    {
        get
        {
            return this.aS2ID2Field;
        }
        set
        {
            this.aS2ID2Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public string Reference2
    {
        get
        {
            return this.reference2Field;
        }
        set
        {
            this.reference2Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public UserIDInfo NetOps
    {
        get
        {
            return this.netOpsField;
        }
        set
        {
            this.netOpsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ECGridIDInfoCollection
{

    private short pageSizeField;

    private short pageNumberField;

    private int countField;

    private int totalRecordsField;

    private short totalPagesField;

    private ECGridIDInfo[] eCGridIDInfoListField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public short PageSize
    {
        get
        {
            return this.pageSizeField;
        }
        set
        {
            this.pageSizeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public short PageNumber
    {
        get
        {
            return this.pageNumberField;
        }
        set
        {
            this.pageNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int Count
    {
        get
        {
            return this.countField;
        }
        set
        {
            this.countField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int TotalRecords
    {
        get
        {
            return this.totalRecordsField;
        }
        set
        {
            this.totalRecordsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public short TotalPages
    {
        get
        {
            return this.totalPagesField;
        }
        set
        {
            this.totalPagesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 5)]
    public ECGridIDInfo[] ECGridIDInfoList
    {
        get
        {
            return this.eCGridIDInfoListField;
        }
        set
        {
            this.eCGridIDInfoListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class InterchangeIDStatus
{

    private long idField;

    private System.DateTime interchangeProcessDateField;

    private int networkIDFromField;

    private int mailboxIDFromField;

    private int eCGridIDFromField;

    private int networkIDToField;

    private int mailboxIDToField;

    private int eCGridIDToField;

    private int routerIDField;

    private long bytesField;

    private string statusCodeField;

    private System.DateTime statusDateField;

    private string interchangeHeaderField;

    private EDIStandard standardField;

    private int parcelIDInboxField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public long Id
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime InterchangeProcessDate
    {
        get
        {
            return this.interchangeProcessDateField;
        }
        set
        {
            this.interchangeProcessDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int NetworkIDFrom
    {
        get
        {
            return this.networkIDFromField;
        }
        set
        {
            this.networkIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int MailboxIDFrom
    {
        get
        {
            return this.mailboxIDFromField;
        }
        set
        {
            this.mailboxIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public int ECGridIDFrom
    {
        get
        {
            return this.eCGridIDFromField;
        }
        set
        {
            this.eCGridIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public int NetworkIDTo
    {
        get
        {
            return this.networkIDToField;
        }
        set
        {
            this.networkIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public int MailboxIDTo
    {
        get
        {
            return this.mailboxIDToField;
        }
        set
        {
            this.mailboxIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public int ECGridIDTo
    {
        get
        {
            return this.eCGridIDToField;
        }
        set
        {
            this.eCGridIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public int RouterID
    {
        get
        {
            return this.routerIDField;
        }
        set
        {
            this.routerIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public long Bytes
    {
        get
        {
            return this.bytesField;
        }
        set
        {
            this.bytesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string StatusCode
    {
        get
        {
            return this.statusCodeField;
        }
        set
        {
            this.statusCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public System.DateTime StatusDate
    {
        get
        {
            return this.statusDateField;
        }
        set
        {
            this.statusDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public string InterchangeHeader
    {
        get
        {
            return this.interchangeHeaderField;
        }
        set
        {
            this.interchangeHeaderField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public EDIStandard standard
    {
        get
        {
            return this.standardField;
        }
        set
        {
            this.standardField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public int ParcelIDInbox
    {
        get
        {
            return this.parcelIDInboxField;
        }
        set
        {
            this.parcelIDInboxField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class InterchangeIDInfoCollection
{

    private short pageSizeField;

    private short pageNumberField;

    private int countField;

    private int totalRecordsField;

    private short totalPagesField;

    private InterchangeIDInfo[] interchangeIDInfoListField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public short PageSize
    {
        get
        {
            return this.pageSizeField;
        }
        set
        {
            this.pageSizeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public short PageNumber
    {
        get
        {
            return this.pageNumberField;
        }
        set
        {
            this.pageNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int Count
    {
        get
        {
            return this.countField;
        }
        set
        {
            this.countField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int TotalRecords
    {
        get
        {
            return this.totalRecordsField;
        }
        set
        {
            this.totalRecordsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public short TotalPages
    {
        get
        {
            return this.totalPagesField;
        }
        set
        {
            this.totalPagesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 5)]
    public InterchangeIDInfo[] InterchangeIDInfoList
    {
        get
        {
            return this.interchangeIDInfoListField;
        }
        set
        {
            this.interchangeIDInfoListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class InterchangeIDInfo
{

    private long interchangeIDField;

    private System.DateTime interchangeProcessDateField;

    private int networkIDFromField;

    private string networkNameFromField;

    private int mailboxIDFromField;

    private int networkIDToField;

    private string networkNameToField;

    private int mailboxIDToField;

    private EDIStandard standardField;

    private int bytesField;

    private string interchangeControlIDField;

    private System.DateTime interchangeDateTimeField;

    private System.DateTime archiveDateField;

    private System.DateTime statusDateField;

    private string statusCodeField;

    private string statusMessageField;

    private string documentTypeField;

    private string headerField;

    private ECGridIDInfo tPFromField;

    private ECGridIDInfo tPToField;

    private ParcelIDInfo[] parcelsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public long InterchangeID
    {
        get
        {
            return this.interchangeIDField;
        }
        set
        {
            this.interchangeIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime InterchangeProcessDate
    {
        get
        {
            return this.interchangeProcessDateField;
        }
        set
        {
            this.interchangeProcessDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int NetworkIDFrom
    {
        get
        {
            return this.networkIDFromField;
        }
        set
        {
            this.networkIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public string NetworkNameFrom
    {
        get
        {
            return this.networkNameFromField;
        }
        set
        {
            this.networkNameFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public int MailboxIDFrom
    {
        get
        {
            return this.mailboxIDFromField;
        }
        set
        {
            this.mailboxIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public int NetworkIDTo
    {
        get
        {
            return this.networkIDToField;
        }
        set
        {
            this.networkIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string NetworkNameTo
    {
        get
        {
            return this.networkNameToField;
        }
        set
        {
            this.networkNameToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public int MailboxIDTo
    {
        get
        {
            return this.mailboxIDToField;
        }
        set
        {
            this.mailboxIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public EDIStandard Standard
    {
        get
        {
            return this.standardField;
        }
        set
        {
            this.standardField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public int Bytes
    {
        get
        {
            return this.bytesField;
        }
        set
        {
            this.bytesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string InterchangeControlID
    {
        get
        {
            return this.interchangeControlIDField;
        }
        set
        {
            this.interchangeControlIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public System.DateTime InterchangeDateTime
    {
        get
        {
            return this.interchangeDateTimeField;
        }
        set
        {
            this.interchangeDateTimeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public System.DateTime ArchiveDate
    {
        get
        {
            return this.archiveDateField;
        }
        set
        {
            this.archiveDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public System.DateTime StatusDate
    {
        get
        {
            return this.statusDateField;
        }
        set
        {
            this.statusDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public string StatusCode
    {
        get
        {
            return this.statusCodeField;
        }
        set
        {
            this.statusCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public string StatusMessage
    {
        get
        {
            return this.statusMessageField;
        }
        set
        {
            this.statusMessageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public string DocumentType
    {
        get
        {
            return this.documentTypeField;
        }
        set
        {
            this.documentTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public string Header
    {
        get
        {
            return this.headerField;
        }
        set
        {
            this.headerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public ECGridIDInfo TPFrom
    {
        get
        {
            return this.tPFromField;
        }
        set
        {
            this.tPFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public ECGridIDInfo TPTo
    {
        get
        {
            return this.tPToField;
        }
        set
        {
            this.tPToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 20)]
    public ParcelIDInfo[] Parcels
    {
        get
        {
            return this.parcelsField;
        }
        set
        {
            this.parcelsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ParcelIDInfo
{

    private int parcelBytesField;

    private System.DateTime parcelDateField;

    private int actualBytesField;

    private int networkIDFromField;

    private string networkNameFromField;

    private int mailboxIDFromField;

    private string mailboxNameFromField;

    private int networkIDToField;

    private string networkNameToField;

    private int mailboxIDToField;

    private string mailboxNameToField;

    private string fileNameField;

    private string mailbagControlIDField;

    private System.DateTime archiveDateField;

    private System.DateTime statusDateField;

    private string statusCodeField;

    private string statusMessageField;

    private short localStatusField;

    private System.DateTime localStatusDateField;

    private ParcelValid validField;

    private string acknowledgmentField;

    private Direction directionField;

    private InterchangeIDInfo[] interchangesField;

    private ManifestInfo[] logField;

    private long parcelIDField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int ParcelBytes
    {
        get
        {
            return this.parcelBytesField;
        }
        set
        {
            this.parcelBytesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime ParcelDate
    {
        get
        {
            return this.parcelDateField;
        }
        set
        {
            this.parcelDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int ActualBytes
    {
        get
        {
            return this.actualBytesField;
        }
        set
        {
            this.actualBytesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int NetworkIDFrom
    {
        get
        {
            return this.networkIDFromField;
        }
        set
        {
            this.networkIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string NetworkNameFrom
    {
        get
        {
            return this.networkNameFromField;
        }
        set
        {
            this.networkNameFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public int MailboxIDFrom
    {
        get
        {
            return this.mailboxIDFromField;
        }
        set
        {
            this.mailboxIDFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string MailboxNameFrom
    {
        get
        {
            return this.mailboxNameFromField;
        }
        set
        {
            this.mailboxNameFromField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public int NetworkIDTo
    {
        get
        {
            return this.networkIDToField;
        }
        set
        {
            this.networkIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string NetworkNameTo
    {
        get
        {
            return this.networkNameToField;
        }
        set
        {
            this.networkNameToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public int MailboxIDTo
    {
        get
        {
            return this.mailboxIDToField;
        }
        set
        {
            this.mailboxIDToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string MailboxNameTo
    {
        get
        {
            return this.mailboxNameToField;
        }
        set
        {
            this.mailboxNameToField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public string FileName
    {
        get
        {
            return this.fileNameField;
        }
        set
        {
            this.fileNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public string MailbagControlID
    {
        get
        {
            return this.mailbagControlIDField;
        }
        set
        {
            this.mailbagControlIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public System.DateTime ArchiveDate
    {
        get
        {
            return this.archiveDateField;
        }
        set
        {
            this.archiveDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public System.DateTime StatusDate
    {
        get
        {
            return this.statusDateField;
        }
        set
        {
            this.statusDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public string StatusCode
    {
        get
        {
            return this.statusCodeField;
        }
        set
        {
            this.statusCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public string StatusMessage
    {
        get
        {
            return this.statusMessageField;
        }
        set
        {
            this.statusMessageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public short LocalStatus
    {
        get
        {
            return this.localStatusField;
        }
        set
        {
            this.localStatusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public System.DateTime LocalStatusDate
    {
        get
        {
            return this.localStatusDateField;
        }
        set
        {
            this.localStatusDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public ParcelValid Valid
    {
        get
        {
            return this.validField;
        }
        set
        {
            this.validField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public string Acknowledgment
    {
        get
        {
            return this.acknowledgmentField;
        }
        set
        {
            this.acknowledgmentField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
    public Direction Direction
    {
        get
        {
            return this.directionField;
        }
        set
        {
            this.directionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 22)]
    public InterchangeIDInfo[] Interchanges
    {
        get
        {
            return this.interchangesField;
        }
        set
        {
            this.interchangesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 23)]
    public ManifestInfo[] Log
    {
        get
        {
            return this.logField;
        }
        set
        {
            this.logField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 24)]
    public long ParcelID
    {
        get
        {
            return this.parcelIDField;
        }
        set
        {
            this.parcelIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum ParcelValid
{

    /// <remarks/>
    Pending,

    /// <remarks/>
    Invalid,

    /// <remarks/>
    Valid,

    /// <remarks/>
    PartialValid,

    /// <remarks/>
    ValidNoneRouted,

    /// <remarks/>
    Duplicate,

    /// <remarks/>
    ZeroByte,

    /// <remarks/>
    VallidRouted,

    /// <remarks/>
    ValidPartialRouted,

    /// <remarks/>
    ValidNoneRoutedx,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ManifestInfo
{

    private System.DateTime manifestDateField;

    private int networkIDField;

    private string networkNameField;

    private ManifestType typeField;

    private long parcelIDField;

    private long interchangeIDField;

    private string statusCodeField;

    private string statusMessageField;

    private string statusColorField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public System.DateTime ManifestDate
    {
        get
        {
            return this.manifestDateField;
        }
        set
        {
            this.manifestDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string NetworkName
    {
        get
        {
            return this.networkNameField;
        }
        set
        {
            this.networkNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public ManifestType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public long ParcelID
    {
        get
        {
            return this.parcelIDField;
        }
        set
        {
            this.parcelIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public long InterchangeID
    {
        get
        {
            return this.interchangeIDField;
        }
        set
        {
            this.interchangeIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string StatusCode
    {
        get
        {
            return this.statusCodeField;
        }
        set
        {
            this.statusCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string StatusMessage
    {
        get
        {
            return this.statusMessageField;
        }
        set
        {
            this.statusMessageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string StatusColor
    {
        get
        {
            return this.statusColorField;
        }
        set
        {
            this.statusColorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum ManifestType
{

    /// <remarks/>
    System,

    /// <remarks/>
    Error,

    /// <remarks/>
    Manual,

    /// <remarks/>
    ECGridOS,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ParcelIDInfoCollection
{

    private short pageSizeField;

    private short pageNumberField;

    private int countField;

    private int totalRecordsField;

    private short totalPagesField;

    private ParcelIDInfo[] parcelIDInfoListField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public short PageSize
    {
        get
        {
            return this.pageSizeField;
        }
        set
        {
            this.pageSizeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public short PageNumber
    {
        get
        {
            return this.pageNumberField;
        }
        set
        {
            this.pageNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public int Count
    {
        get
        {
            return this.countField;
        }
        set
        {
            this.countField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int TotalRecords
    {
        get
        {
            return this.totalRecordsField;
        }
        set
        {
            this.totalRecordsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public short TotalPages
    {
        get
        {
            return this.totalPagesField;
        }
        set
        {
            this.totalPagesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 5)]
    public ParcelIDInfo[] ParcelIDInfoList
    {
        get
        {
            return this.parcelIDInfoListField;
        }
        set
        {
            this.parcelIDInfoListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class ParcelNote
{

    private long parcelIDField;

    private int parcelNoteIDField;

    private long interchangeIDField;

    private System.DateTime noteDateField;

    private string statusCodeField;

    private string postedByField;

    private int userIDField;

    private string noteField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public long ParcelID
    {
        get
        {
            return this.parcelIDField;
        }
        set
        {
            this.parcelIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public int ParcelNoteID
    {
        get
        {
            return this.parcelNoteIDField;
        }
        set
        {
            this.parcelNoteIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public long InterchangeID
    {
        get
        {
            return this.interchangeIDField;
        }
        set
        {
            this.interchangeIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime NoteDate
    {
        get
        {
            return this.noteDateField;
        }
        set
        {
            this.noteDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string StatusCode
    {
        get
        {
            return this.statusCodeField;
        }
        set
        {
            this.statusCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string PostedBy
    {
        get
        {
            return this.postedByField;
        }
        set
        {
            this.postedByField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public int UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string Note
    {
        get
        {
            return this.noteField;
        }
        set
        {
            this.noteField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CertificateRootInfo
{

    private string passwordField;

    private byte[] privatePFXField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string Password
    {
        get
        {
            return this.passwordField;
        }
        set
        {
            this.passwordField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 1)]
    public byte[] PrivatePFX
    {
        get
        {
            return this.privatePFXField;
        }
        set
        {
            this.privatePFXField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CertificateInfo
{

    private int certKeyIDField;

    private string partnerAS2IDField;

    private string partnerURLField;

    private CertificateType typeField;

    private CertificateUsage usageField;

    private string secureHashAlgorithmField;

    private string subjectField;

    private string issuerField;

    private bool hasPrivateKeyField;

    private byte[] publicCertificateField;

    private System.DateTime beginUsageField;

    private System.DateTime endUsageField;

    private System.DateTime notBeforeField;

    private System.DateTime notAfterField;

    private string serialNumberField;

    private string thumbprintField;

    private Status statusField;

    private CertificateRootInfo rootInfoField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int CertKeyID
    {
        get
        {
            return this.certKeyIDField;
        }
        set
        {
            this.certKeyIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string PartnerAS2ID
    {
        get
        {
            return this.partnerAS2IDField;
        }
        set
        {
            this.partnerAS2IDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string PartnerURL
    {
        get
        {
            return this.partnerURLField;
        }
        set
        {
            this.partnerURLField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public CertificateType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public CertificateUsage Usage
    {
        get
        {
            return this.usageField;
        }
        set
        {
            this.usageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string SecureHashAlgorithm
    {
        get
        {
            return this.secureHashAlgorithmField;
        }
        set
        {
            this.secureHashAlgorithmField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string Subject
    {
        get
        {
            return this.subjectField;
        }
        set
        {
            this.subjectField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string Issuer
    {
        get
        {
            return this.issuerField;
        }
        set
        {
            this.issuerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public bool HasPrivateKey
    {
        get
        {
            return this.hasPrivateKeyField;
        }
        set
        {
            this.hasPrivateKeyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 9)]
    public byte[] PublicCertificate
    {
        get
        {
            return this.publicCertificateField;
        }
        set
        {
            this.publicCertificateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public System.DateTime BeginUsage
    {
        get
        {
            return this.beginUsageField;
        }
        set
        {
            this.beginUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public System.DateTime EndUsage
    {
        get
        {
            return this.endUsageField;
        }
        set
        {
            this.endUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public System.DateTime NotBefore
    {
        get
        {
            return this.notBeforeField;
        }
        set
        {
            this.notBeforeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public System.DateTime NotAfter
    {
        get
        {
            return this.notAfterField;
        }
        set
        {
            this.notAfterField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public string SerialNumber
    {
        get
        {
            return this.serialNumberField;
        }
        set
        {
            this.serialNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public string Thumbprint
    {
        get
        {
            return this.thumbprintField;
        }
        set
        {
            this.thumbprintField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public CertificateRootInfo RootInfo
    {
        get
        {
            return this.rootInfoField;
        }
        set
        {
            this.rootInfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum CertificateType
{

    /// <remarks/>
    X509,

    /// <remarks/>
    PGP,

    /// <remarks/>
    SSH,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum CertificateUsage
{

    /// <remarks/>
    SSL,

    /// <remarks/>
    Encryption,

    /// <remarks/>
    Signature,

    /// <remarks/>
    EncryptionAndSignature,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class as2CommInfo
{

    private int commIDField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private bool hostedField;

    private string identifierField;

    private UserIDInfo ownerField;

    private int networkIDField;

    private int mailboxIDField;

    private UseType useTypeField;

    private string uRLField;

    private string mimeTypeOverrideField;

    private bool signDataField;

    private bool encryptDataField;

    private bool compressDataField;

    private System.DateTime beginUsageField;

    private System.DateTime endUsageField;

    private Status statusField;

    private ReceiptType receiptField;

    private bool sSLClientAuthenticationField;

    private HTTPAuthInfo hTTPAuthenticationField;

    private CertificateInfo[] certificatesField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int CommID
    {
        get
        {
            return this.commIDField;
        }
        set
        {
            this.commIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public bool Hosted
    {
        get
        {
            return this.hostedField;
        }
        set
        {
            this.hostedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string Identifier
    {
        get
        {
            return this.identifierField;
        }
        set
        {
            this.identifierField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public UserIDInfo Owner
    {
        get
        {
            return this.ownerField;
        }
        set
        {
            this.ownerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public UseType UseType
    {
        get
        {
            return this.useTypeField;
        }
        set
        {
            this.useTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public string URL
    {
        get
        {
            return this.uRLField;
        }
        set
        {
            this.uRLField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public string MimeTypeOverride
    {
        get
        {
            return this.mimeTypeOverrideField;
        }
        set
        {
            this.mimeTypeOverrideField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public bool SignData
    {
        get
        {
            return this.signDataField;
        }
        set
        {
            this.signDataField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public bool EncryptData
    {
        get
        {
            return this.encryptDataField;
        }
        set
        {
            this.encryptDataField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public bool CompressData
    {
        get
        {
            return this.compressDataField;
        }
        set
        {
            this.compressDataField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public System.DateTime BeginUsage
    {
        get
        {
            return this.beginUsageField;
        }
        set
        {
            this.beginUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public System.DateTime EndUsage
    {
        get
        {
            return this.endUsageField;
        }
        set
        {
            this.endUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public ReceiptType Receipt
    {
        get
        {
            return this.receiptField;
        }
        set
        {
            this.receiptField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public bool SSLClientAuthentication
    {
        get
        {
            return this.sSLClientAuthenticationField;
        }
        set
        {
            this.sSLClientAuthenticationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public HTTPAuthInfo HTTPAuthentication
    {
        get
        {
            return this.hTTPAuthenticationField;
        }
        set
        {
            this.hTTPAuthenticationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 20)]
    public CertificateInfo[] Certificates
    {
        get
        {
            return this.certificatesField;
        }
        set
        {
            this.certificatesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum ReceiptType
{

    /// <remarks/>
    None,

    /// <remarks/>
    SynchronousUnsigned,

    /// <remarks/>
    SynchronousSigned,

    /// <remarks/>
    AsynchronousUnsigned,

    /// <remarks/>
    AsynchronousSigned,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CertificateRoot
{

    private string passwordField;

    private byte[] privatePFXField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public string Password
    {
        get
        {
            return this.passwordField;
        }
        set
        {
            this.passwordField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 1)]
    public byte[] PrivatePFX
    {
        get
        {
            return this.privatePFXField;
        }
        set
        {
            this.privatePFXField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class Certificate
{

    private int certKeyIDField;

    private string partnerIDField;

    private string partnerURLField;

    private CertificateType typeField;

    private CertificateUsage usageField;

    private string keyIDField;

    private string userIDField;

    private string secureHashAlgorithmField;

    private string subjectField;

    private string issuerField;

    private bool hasPrivateKeyField;

    private byte[] publicCertificateField;

    private System.DateTime beginUsageField;

    private System.DateTime endUsageField;

    private System.DateTime notBeforeField;

    private System.DateTime notAfterField;

    private string serialNumberField;

    private string thumbprintField;

    private Status statusField;

    private CertificateRoot rootInfoField;

    private CertStoreTypes certTypeField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int CertKeyID
    {
        get
        {
            return this.certKeyIDField;
        }
        set
        {
            this.certKeyIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public string PartnerID
    {
        get
        {
            return this.partnerIDField;
        }
        set
        {
            this.partnerIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string PartnerURL
    {
        get
        {
            return this.partnerURLField;
        }
        set
        {
            this.partnerURLField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public CertificateType Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public CertificateUsage Usage
    {
        get
        {
            return this.usageField;
        }
        set
        {
            this.usageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public string KeyID
    {
        get
        {
            return this.keyIDField;
        }
        set
        {
            this.keyIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string UserID
    {
        get
        {
            return this.userIDField;
        }
        set
        {
            this.userIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public string SecureHashAlgorithm
    {
        get
        {
            return this.secureHashAlgorithmField;
        }
        set
        {
            this.secureHashAlgorithmField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public string Subject
    {
        get
        {
            return this.subjectField;
        }
        set
        {
            this.subjectField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public string Issuer
    {
        get
        {
            return this.issuerField;
        }
        set
        {
            this.issuerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public bool HasPrivateKey
    {
        get
        {
            return this.hasPrivateKeyField;
        }
        set
        {
            this.hasPrivateKeyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 11)]
    public byte[] PublicCertificate
    {
        get
        {
            return this.publicCertificateField;
        }
        set
        {
            this.publicCertificateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public System.DateTime BeginUsage
    {
        get
        {
            return this.beginUsageField;
        }
        set
        {
            this.beginUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public System.DateTime EndUsage
    {
        get
        {
            return this.endUsageField;
        }
        set
        {
            this.endUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public System.DateTime NotBefore
    {
        get
        {
            return this.notBeforeField;
        }
        set
        {
            this.notBeforeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public System.DateTime NotAfter
    {
        get
        {
            return this.notAfterField;
        }
        set
        {
            this.notAfterField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public string SerialNumber
    {
        get
        {
            return this.serialNumberField;
        }
        set
        {
            this.serialNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public string Thumbprint
    {
        get
        {
            return this.thumbprintField;
        }
        set
        {
            this.thumbprintField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public CertificateRoot RootInfo
    {
        get
        {
            return this.rootInfoField;
        }
        set
        {
            this.rootInfoField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public CertStoreTypes CertType
    {
        get
        {
            return this.certTypeField;
        }
        set
        {
            this.certTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum CertStoreTypes
{

    /// <remarks/>
    cstUser,

    /// <remarks/>
    cstMachine,

    /// <remarks/>
    cstPFXFile,

    /// <remarks/>
    cstPFXBlob,

    /// <remarks/>
    cstJKSFile,

    /// <remarks/>
    cstJKSBlob,

    /// <remarks/>
    cstPEMKeyFile,

    /// <remarks/>
    cstPEMKeyBlob,

    /// <remarks/>
    cstPublicKeyFile,

    /// <remarks/>
    cstPublicKeyBlob,

    /// <remarks/>
    cstSSHPublicKeyBlob,

    /// <remarks/>
    cstP7BFile,

    /// <remarks/>
    cstP7BBlob,

    /// <remarks/>
    cstSSHPublicKeyFile,

    /// <remarks/>
    cstPPKFile,

    /// <remarks/>
    cstPPKBlob,

    /// <remarks/>
    cstXMLFile,

    /// <remarks/>
    cstXMLBlob,

    /// <remarks/>
    cstJWKFile,

    /// <remarks/>
    cstJWKBlob,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CommIDInfo
{

    private int commIDField;

    private NetworkGatewayCommChannel typeField;

    private string versionField;

    private System.DateTime createdField;

    private System.DateTime modifiedField;

    private bool hostedField;

    private string identifierField;

    private UserIDInfo ownerField;

    private int networkIDField;

    private int mailboxIDField;

    private UseType useTypeField;

    private string uRLField;

    private string mimeTypeOverrideField;

    private bool signDataField;

    private bool encryptDataField;

    private bool compressDataField;

    private System.DateTime beginUsageField;

    private System.DateTime endUsageField;

    private Status statusField;

    private ReceiptType receiptField;

    private bool sSLClientAuthenticationField;

    private HTTPAuthInfo hTTPAuthenticationField;

    private Certificate[] certificatesField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public int CommID
    {
        get
        {
            return this.commIDField;
        }
        set
        {
            this.commIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public NetworkGatewayCommChannel Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public string Version
    {
        get
        {
            return this.versionField;
        }
        set
        {
            this.versionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public System.DateTime Created
    {
        get
        {
            return this.createdField;
        }
        set
        {
            this.createdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public System.DateTime Modified
    {
        get
        {
            return this.modifiedField;
        }
        set
        {
            this.modifiedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
    public bool Hosted
    {
        get
        {
            return this.hostedField;
        }
        set
        {
            this.hostedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
    public string Identifier
    {
        get
        {
            return this.identifierField;
        }
        set
        {
            this.identifierField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
    public UserIDInfo Owner
    {
        get
        {
            return this.ownerField;
        }
        set
        {
            this.ownerField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
    public int NetworkID
    {
        get
        {
            return this.networkIDField;
        }
        set
        {
            this.networkIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
    public int MailboxID
    {
        get
        {
            return this.mailboxIDField;
        }
        set
        {
            this.mailboxIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
    public UseType UseType
    {
        get
        {
            return this.useTypeField;
        }
        set
        {
            this.useTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
    public string URL
    {
        get
        {
            return this.uRLField;
        }
        set
        {
            this.uRLField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
    public string MimeTypeOverride
    {
        get
        {
            return this.mimeTypeOverrideField;
        }
        set
        {
            this.mimeTypeOverrideField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
    public bool SignData
    {
        get
        {
            return this.signDataField;
        }
        set
        {
            this.signDataField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
    public bool EncryptData
    {
        get
        {
            return this.encryptDataField;
        }
        set
        {
            this.encryptDataField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
    public bool CompressData
    {
        get
        {
            return this.compressDataField;
        }
        set
        {
            this.compressDataField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
    public System.DateTime BeginUsage
    {
        get
        {
            return this.beginUsageField;
        }
        set
        {
            this.beginUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
    public System.DateTime EndUsage
    {
        get
        {
            return this.endUsageField;
        }
        set
        {
            this.endUsageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
    public Status Status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
    public ReceiptType Receipt
    {
        get
        {
            return this.receiptField;
        }
        set
        {
            this.receiptField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
    public bool SSLClientAuthentication
    {
        get
        {
            return this.sSLClientAuthenticationField;
        }
        set
        {
            this.sSLClientAuthenticationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
    public HTTPAuthInfo HTTPAuthentication
    {
        get
        {
            return this.hTTPAuthenticationField;
        }
        set
        {
            this.hTTPAuthenticationField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order = 22)]
    public Certificate[] Certificates
    {
        get
        {
            return this.certificatesField;
        }
        set
        {
            this.certificatesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public partial class CallBackLogInfo
{

    private long callBackLogIDField;

    private System.DateTime dateField;

    private short callNumberField;

    private int returnCodeField;

    private string messageField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
    public long CallBackLogID
    {
        get
        {
            return this.callBackLogIDField;
        }
        set
        {
            this.callBackLogIDField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
    public System.DateTime Date
    {
        get
        {
            return this.dateField;
        }
        set
        {
            this.dateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
    public short CallNumber
    {
        get
        {
            return this.callNumberField;
        }
        set
        {
            this.callNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
    public int ReturnCode
    {
        get
        {
            return this.returnCodeField;
        }
        set
        {
            this.returnCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
    public string Message
    {
        get
        {
            return this.messageField;
        }
        set
        {
            this.messageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum StatusCallBack
{

    /// <remarks/>
    Active,

    /// <remarks/>
    Pending,

    /// <remarks/>
    Completed,

    /// <remarks/>
    Error,

    /// <remarks/>
    Canceled,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum StatisticsPeriod
{

    /// <remarks/>
    Hour,

    /// <remarks/>
    Day,

    /// <remarks/>
    Week,

    /// <remarks/>
    Month,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "CertificateAddPublic", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class CertificateAddPublicRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    public int CommID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 2)]
    public CertificateType CertType;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 3)]
    public string KeyId;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 4)]
    public string UserId;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 5)]
    public System.DateTime BeginUsage;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 6)]
    public CertificateUsage Usage;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 7)]
    public string PartnerCommID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 8)]
    public string PartnerURL;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 9)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] Cert;

    public CertificateAddPublicRequest()
    {
    }

    public CertificateAddPublicRequest(string SessionID, int CommID, CertificateType CertType, string KeyId, string UserId, System.DateTime BeginUsage, CertificateUsage Usage, string PartnerCommID, string PartnerURL, byte[] Cert)
    {
        this.SessionID = SessionID;
        this.CommID = CommID;
        this.CertType = CertType;
        this.KeyId = KeyId;
        this.UserId = UserId;
        this.BeginUsage = BeginUsage;
        this.Usage = Usage;
        this.PartnerCommID = PartnerCommID;
        this.PartnerURL = PartnerURL;
        this.Cert = Cert;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "CertificateAddPublicResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class CertificateAddPublicResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public CommIDInfo CertificateAddPublicResult;

    public CertificateAddPublicResponse()
    {
    }

    public CertificateAddPublicResponse(CommIDInfo CertificateAddPublicResult)
    {
        this.CertificateAddPublicResult = CertificateAddPublicResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "CertAddPrivate", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class CertAddPrivateRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    public int CommID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 2)]
    public CertificateType CertType;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 3)]
    public string KeyId;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 4)]
    public string UserId;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 5)]
    public System.DateTime BeginUsage;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 6)]
    public CertificateUsage Usage;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 7)]
    public string PartnerAS2ID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 8)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] Cert;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 9)]
    public string Password;

    public CertAddPrivateRequest()
    {
    }

    public CertAddPrivateRequest(string SessionID, int CommID, CertificateType CertType, string KeyId, string UserId, System.DateTime BeginUsage, CertificateUsage Usage, string PartnerAS2ID, byte[] Cert, string Password)
    {
        this.SessionID = SessionID;
        this.CommID = CommID;
        this.CertType = CertType;
        this.KeyId = KeyId;
        this.UserId = UserId;
        this.BeginUsage = BeginUsage;
        this.Usage = Usage;
        this.PartnerAS2ID = PartnerAS2ID;
        this.Cert = Cert;
        this.Password = Password;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "CertAddPrivateResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class CertAddPrivateResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public as2CommInfo CertAddPrivateResult;

    public CertAddPrivateResponse()
    {
    }

    public CertAddPrivateResponse(as2CommInfo CertAddPrivateResult)
    {
        this.CertAddPrivateResult = CertAddPrivateResult;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum CertificateSecureHashAlgorithm
{

    /// <remarks/>
    sha1,

    /// <remarks/>
    sha2,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum ParcelStatus
{

    /// <remarks/>
    InBoxReady,

    /// <remarks/>
    InBoxTransferred,

    /// <remarks/>
    x1256Pending,

    /// <remarks/>
    as2Receive,

    /// <remarks/>
    as2MDNSent,

    /// <remarks/>
    as2MDNPending,

    /// <remarks/>
    as2MDNRejected,

    /// <remarks/>
    as2MDNConfirmed,

    /// <remarks/>
    as2Sent,

    /// <remarks/>
    as2SendFailed,

    /// <remarks/>
    gisbReceived,

    /// <remarks/>
    gisbSent,

    /// <remarks/>
    gisbSendFailed,

    /// <remarks/>
    cxmlReceived,

    /// <remarks/>
    cxmlSent,

    /// <remarks/>
    cxmlSendFailed,

    /// <remarks/>
    ftpReceived,

    /// <remarks/>
    x400Received,

    /// <remarks/>
    smtpReceived,

    /// <remarks/>
    oftpReceived,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "ParcelUploadMft", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class ParcelUploadMftRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    public string FileName;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 2)]
    public int Bytes;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 3)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] Content;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 4)]
    public int ECGridIDFrom;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 5)]
    public int ECGridIDTo;

    public ParcelUploadMftRequest()
    {
    }

    public ParcelUploadMftRequest(string SessionID, string FileName, int Bytes, byte[] Content, int ECGridIDFrom, int ECGridIDTo)
    {
        this.SessionID = SessionID;
        this.FileName = FileName;
        this.Bytes = Bytes;
        this.Content = Content;
        this.ECGridIDFrom = ECGridIDFrom;
        this.ECGridIDTo = ECGridIDTo;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "ParcelUploadMftResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class ParcelUploadMftResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public long ParcelUploadMftResult;

    public ParcelUploadMftResponse()
    {
    }

    public ParcelUploadMftResponse(long ParcelUploadMftResult)
    {
        this.ParcelUploadMftResult = ParcelUploadMftResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "InterchangeHeaderInfoB", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class InterchangeHeaderInfoBRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] InterchangeHeader;

    public InterchangeHeaderInfoBRequest()
    {
    }

    public InterchangeHeaderInfoBRequest(string SessionID, byte[] InterchangeHeader)
    {
        this.SessionID = SessionID;
        this.InterchangeHeader = InterchangeHeader;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "InterchangeHeaderInfoBResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class InterchangeHeaderInfoBResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public InterchangeIDInfo InterchangeHeaderInfoBResult;

    public InterchangeHeaderInfoBResponse()
    {
    }

    public InterchangeHeaderInfoBResponse(InterchangeIDInfo InterchangeHeaderInfoBResult)
    {
        this.InterchangeHeaderInfoBResult = InterchangeHeaderInfoBResult;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum EMailSystem
{

    /// <remarks/>
    smtp,

    /// <remarks/>
    x400,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum EMailPayload
{

    /// <remarks/>
    Body,

    /// <remarks/>
    Attachment,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum OrderBy
{

    /// <remarks/>
    Description,

    /// <remarks/>
    QID,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum eMailTo
{

    /// <remarks/>
    NoEMail,

    /// <remarks/>
    Requestor,

    /// <remarks/>
    Network,

    /// <remarks/>
    RequestorAndNetwork,

    /// <remarks/>
    Other,

    /// <remarks/>
    RequestorAndOther,

    /// <remarks/>
    NetworkAndOther,

    /// <remarks/>
    EMailAll,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "InterconnectNote", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class InterconnectNoteRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    public int InterconnectID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 2)]
    public AuthLevel AuthLevel;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 3)]
    public string Note;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 4)]
    public string AttachmentName;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 5)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] AttachmentContent;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 6)]
    public eMailTo EMailTo;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 7)]
    public string OtherEMailAddress;

    public InterconnectNoteRequest()
    {
    }

    public InterconnectNoteRequest(string SessionID, int InterconnectID, AuthLevel AuthLevel, string Note, string AttachmentName, byte[] AttachmentContent, eMailTo EMailTo, string OtherEMailAddress)
    {
        this.SessionID = SessionID;
        this.InterconnectID = InterconnectID;
        this.AuthLevel = AuthLevel;
        this.Note = Note;
        this.AttachmentName = AttachmentName;
        this.AttachmentContent = AttachmentContent;
        this.EMailTo = EMailTo;
        this.OtherEMailAddress = OtherEMailAddress;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "InterconnectNoteResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class InterconnectNoteResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public bool InterconnectNoteResult;

    public InterconnectNoteResponse()
    {
    }

    public InterconnectNoteResponse(bool InterconnectNoteResult)
    {
        this.InterconnectNoteResult = InterconnectNoteResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "ParcelUpload", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class ParcelUploadRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    public string FileName;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 2)]
    public int Bytes;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 3)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] Content;

    public ParcelUploadRequest()
    {
    }

    public ParcelUploadRequest(string SessionID, string FileName, int Bytes, byte[] Content)
    {
        this.SessionID = SessionID;
        this.FileName = FileName;
        this.Bytes = Bytes;
        this.Content = Content;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "ParcelUploadResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class ParcelUploadResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public long ParcelUploadResult;

    public ParcelUploadResponse()
    {
    }

    public ParcelUploadResponse(long ParcelUploadResult)
    {
        this.ParcelUploadResult = ParcelUploadResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "ParcelUploadEx", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class ParcelUploadExRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public string SessionID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 1)]
    public int NetworkID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 2)]
    public int MailboxID;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 3)]
    public string FileName;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 4)]
    public int Bytes;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 5)]
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] Content;

    public ParcelUploadExRequest()
    {
    }

    public ParcelUploadExRequest(string SessionID, int NetworkID, int MailboxID, string FileName, int Bytes, byte[] Content)
    {
        this.SessionID = SessionID;
        this.NetworkID = NetworkID;
        this.MailboxID = MailboxID;
        this.FileName = FileName;
        this.Bytes = Bytes;
        this.Content = Content;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "ParcelUploadExResponse", WrapperNamespace = "https://os.ecgrid.io/", IsWrapped = true)]
public partial class ParcelUploadExResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "https://os.ecgrid.io/", Order = 0)]
    public long ParcelUploadExResult;

    public ParcelUploadExResponse()
    {
    }

    public ParcelUploadExResponse(long ParcelUploadExResult)
    {
        this.ParcelUploadExResult = ParcelUploadExResult;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkContactType
{

    /// <remarks/>
    Owner,

    /// <remarks/>
    Errors,

    /// <remarks/>
    Interconnects,

    /// <remarks/>
    Notices,

    /// <remarks/>
    Reports,

    /// <remarks/>
    Accounting,

    /// <remarks/>
    CustomerService,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://os.ecgrid.io/")]
public enum NetworkWebsiteType
{

    /// <remarks/>
    Home,

    /// <remarks/>
    Support,

    /// <remarks/>
    Login,
}

#endregion